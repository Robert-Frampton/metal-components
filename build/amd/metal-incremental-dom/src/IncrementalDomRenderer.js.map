{"version":3,"sources":["IncrementalDomRenderer.js"],"names":["IncrementalDomRenderer","comp","context","refs","config_","getInitialConfig","childComponents_","clearChanges_","on","handleAttached_","bind","handleInterceptedAttributesCall_","handleInterceptedCloseCall_","handleInterceptedOpenCall_","handleChildrenCaptured_","handleChildRender_","renderInsidePatchDontSkip_","addElementClasses_","elementClasses","args","i","length","removeDuplicateClasses_","push","attachDecoratedListeners_","node","component_","wasRendered","attrs","concat","slice","eventName","getEventFromListenerAttr_","attachEvent_","element","key","fn","handleKey","removeListener","isString","setAttribute","getListenerFn","delegate","document","removeAttribute","buildChildren_","children","emptyChildren_","buildShouldUpdateArgs_","changes_","disposeInternal","ref","owner","getOwner","components","child","isDisposed","dispose","finishedRenderingComponent","renderingComponents_","pop","disposeUnused","getComponentBeingRendered","getCurrentData","IncrementalDOM","currentElement","renderer","getRenderer","obj","rootElementReached_","parentNode","get","incDomData_","currComps","keys","order","prevComps","attr","matches","LISTENER_REGEX","exec","toLowerCase","owner_","getParent","parent_","getSubComponent_","tagOrCtor","config","Ctor","getConstructor","data","isDef","match_","addSubComponent","type","getUid","guaranteeParent_","parent","createElement","append","attachData_","tree","componentToRender_","props","tag","renderFromTag_","isComponentTag","handleDataManagerCreated_","manager","getDataManager","constructor","SYNC_UPDATES_MERGED","handleDataPropChanged_","add","validator","Array","isArray","value","originalFn","name","isDefAndNotNull","isBoolean","emit","ELEMENT_CLOSED","resetData_","handleSubComponentCall_","apply","arguments","handleRegularCall_","handleManagerDataPropChanged_","ELEMENT_OPENED","currComp","currRenderer","updateElementIfNotReached_","buildConfigFromCall","capture","hasDataChanged_","Object","intercept_","startInterception","attributes","elementClose","elementOpen","isIncDomNode","CHILD_OWNER","startSkipUpdates","replaceNonInternal","stopSkipUpdates","patch","tempParent","exitDocument","inDocument","renderElement_","sibling","patchOuter","cssClasses","noDuplicates","all","split","used","join","render","fnOrCtor","opt_dataOrElement","opt_parent","isComponentCtor","TempComponent","created","updateContext_","RENDERER","renderChild","stopInterception","prototype","renderSubComponent_","renderIncDom","elementVoid","renderInsidePatch","shouldUpdate","currentPointer","skipNode","startedRenderingComponent","schedule","isRendered_","parentComp","console","warn","renderAsSubComponent","skipNextChildrenDisposal","update","childContext","getChildContext","mixin"],"mappings":"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","file":"node_modules/metal-incremental-dom/src/IncrementalDomRenderer.js","sourcesContent":["'use strict';\n\nimport './incremental-dom';\nimport { core, object } from 'metal';\nimport dom from 'metal-dom';\nimport { domData } from 'metal-dom';\nimport { Component, ComponentRegistry, ComponentRenderer } from 'metal-component';\nimport IncrementalDomAop from './IncrementalDomAop';\nimport IncrementalDomChildren from './children/IncrementalDomChildren';\nimport IncrementalDomUnusedComponents from './cleanup/IncrementalDomUnusedComponents';\nimport IncrementalDomUtils from './utils/IncrementalDomUtils';\n\n/**\n * Class responsible for rendering components via incremental dom.\n */\nclass IncrementalDomRenderer extends ComponentRenderer {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(comp) {\n\t\tsuper(comp);\n\n\t\tcomp.context = {};\n\t\tcomp.refs = {};\n\t\tthis.config_ = comp.getInitialConfig();\n\t\tthis.childComponents_ = [];\n\t\tthis.clearChanges_();\n\t\tcomp.on('attached', this.handleAttached_.bind(this));\n\n\t\t// Binds functions that will be used many times, to avoid creating new\n\t\t// functions each time.\n\t\tthis.handleInterceptedAttributesCall_ =\n\t\t\tthis.handleInterceptedAttributesCall_.bind(this);\n\t\tthis.handleInterceptedCloseCall_ =\n\t\t\tthis.handleInterceptedCloseCall_.bind(this);\n\t\tthis.handleInterceptedOpenCall_ =\n\t\t\tthis.handleInterceptedOpenCall_.bind(this);\n\t\tthis.handleChildrenCaptured_ = this.handleChildrenCaptured_.bind(this);\n\t\tthis.handleChildRender_ = this.handleChildRender_.bind(this);\n\t\tthis.renderInsidePatchDontSkip_ = this.renderInsidePatchDontSkip_.bind(this);\n\t}\n\n\t/**\n\t * Adds the given css classes to the specified arguments for an incremental\n\t * dom call, merging with the existing value if there is one.\n\t * @param {string} elementClasses\n\t * @param {!Array} args\n\t * @protected\n\t */\n\taddElementClasses_(elementClasses, args) {\n\t\tfor (var i = 3; i < args.length; i += 2) {\n\t\t\tif (args[i] === 'class') {\n\t\t\t\targs[i + 1] = this.removeDuplicateClasses_(\n\t\t\t\t\targs[i + 1] + ' ' + elementClasses\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\twhile (args.length < 3) {\n\t\t\targs.push(null);\n\t\t}\n\t\targs.push('class', elementClasses);\n\t}\n\n\t/**\n\t * Attaches inline listeners found on the first component render, since those\n\t * may come from existing elements on the page that already have\n\t * data-on[eventname] attributes set to its final value. This won't trigger\n\t * `handleInterceptedAttributesCall_`, so we need manual work to guarantee\n\t * that projects using progressive enhancement like this will still work.\n\t * @param {!Element} node\n\t * @param {!Array} args\n\t * @protected\n\t */\n\tattachDecoratedListeners_(node, args) {\n\t\tif (!this.component_.wasRendered) {\n\t\t\tvar attrs = (args[2] || []).concat(args.slice(3));\n\t\t\tfor (var i = 0; i < attrs.length; i += 2) {\n\t\t\t\tvar eventName = this.getEventFromListenerAttr_(attrs[i]);\n\t\t\t\tif (eventName && !node[eventName + '__handle__']) {\n\t\t\t\t\tthis.attachEvent_(node, attrs[i], eventName, attrs[i + 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Listens to the specified event, attached via incremental dom calls.\n\t * @param {!Element} element\n\t * @param {string} key\n\t * @param {string} eventName\n\t * @param {function()|string} fn\n\t * @protected\n\t */\n\tattachEvent_(element, key, eventName, fn) {\n\t\tvar handleKey = eventName + '__handle__';\n\t\tif (element[handleKey]) {\n\t\t\telement[handleKey].removeListener();\n\t\t\telement[handleKey] = null;\n\t\t}\n\n\t\telement[key] = fn;\n\t\tif (fn) {\n\t\t\tif (core.isString(fn)) {\n\t\t\t\tif (key[0] === 'd') {\n\t\t\t\t\t// Allow data-on[eventkey] listeners to stay in the dom, as they\n\t\t\t\t\t// won't cause conflicts.\n\t\t\t\t\telement.setAttribute(key, fn);\n\t\t\t\t}\n\t\t\t\tfn = this.component_.getListenerFn(fn);\n\t\t\t}\n\t\t\telement[handleKey] = dom.delegate(document, eventName, element, fn);\n\t\t} else {\n\t\t\telement.removeAttribute(key);\n\t\t}\n\t}\n\n\t/**\n\t * Builds the \"children\" array to be passed to the current component.\n\t * @param {!Array<!Object>} children\n\t * @return {!Array<!Object>}\n\t * @protected\n\t */\n\tbuildChildren_(children) {\n\t\treturn children.length === 0 ? emptyChildren_ : children;\n\t}\n\n\t/**\n\t * Returns an array with the args that should be passed to the component's\n\t * `shouldUpdate` method. This can be overridden by sub classes to change\n\t * what the method should receive.\n\t * @return {!Array}\n\t * @protected\n\t */\n\tbuildShouldUpdateArgs_() {\n\t\treturn [this.changes_];\n\t}\n\n\t/**\n\t * Clears the changes object.\n\t * @protected;\n\t */\n\tclearChanges_() {\n\t\tthis.changes_ = {};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\n\t\tvar comp = this.component_;\n\t\tvar ref = this.config_.ref;\n\t\tvar owner = this.getOwner();\n\t\tif (owner && owner.components && owner.components[ref] === comp) {\n\t\t\tdelete owner.components[ref];\n\t\t}\n\n\t\tfor (var i = 0; i < this.childComponents_.length; i++) {\n\t\t\tconst child = this.childComponents_[i];\n\t\t\tif (!child.isDisposed()) {\n\t\t\t\tchild.element = null;\n\t\t\t\tchild.dispose();\n\t\t\t}\n\t\t}\n\t\tthis.childComponents_ = null;\n\t}\n\n\t/**\n\t * Removes the most recent component from the queue of rendering components.\n\t */\n\tstatic finishedRenderingComponent() {\n\t\trenderingComponents_.pop();\n\t\tif (renderingComponents_.length === 0) {\n\t\t\tIncrementalDomUnusedComponents.disposeUnused();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the component being currently rendered via `IncrementalDomRenderer`.\n\t * @return {Component}\n\t */\n\tstatic getComponentBeingRendered() {\n\t\treturn renderingComponents_[renderingComponents_.length - 1];\n\t}\n\n\t/**\n\t * Gets the data object that should be currently used. This object will either\n\t * come from the current element being rendered by incremental dom or from\n\t * the component instance being rendered (only when the current element is the\n\t * component's direct parent).\n\t * @return {!Object}\n\t */\n\tstatic getCurrentData() {\n\t\tvar element = IncrementalDOM.currentElement();\n\t\tvar comp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar renderer = comp.getRenderer();\n\t\tvar obj = renderer;\n\t\tif (renderer.rootElementReached_ && element !== comp.element.parentNode) {\n\t\t\tobj = domData.get(element);\n\t\t}\n\t\tobj.incDomData_ = obj.incDomData_ || {\n\t\t\tcurrComps: {\n\t\t\t\tkeys: {},\n\t\t\t\torder: {}\n\t\t\t},\n\t\t\tprevComps: {\n\t\t\t\tkeys: {},\n\t\t\t\torder: {}\n\t\t\t}\n\t\t};\n\t\treturn obj.incDomData_;\n\t}\n\n\t/**\n\t * Returns the event name if the given attribute is a listener (of the form\n\t * \"on<EventName>\"), or null if it isn't.\n\t * @param {string} attr\n\t * @return {?string}\n\t * @protected\n\t */\n\tgetEventFromListenerAttr_(attr) {\n\t\tvar matches = IncrementalDomRenderer.LISTENER_REGEX.exec(attr);\n\t\tvar eventName = matches ? (matches[1] ? matches[1] : matches[2]) : null;\n\t\treturn eventName ? eventName.toLowerCase() : null;\n\t}\n\n\t/**\n\t * Gets the component that is this component's owner (that is, the one that\n\t * passed its data and holds its ref), or null if there's none.\n\t * @return {Component}\n\t */\n\tgetOwner() {\n\t\treturn this.owner_;\n\t}\n\n\t/**\n\t * Gets the component that is this component's parent (that is, the one that\n\t * actually rendered it), or null if there's no parent.\n\t * @return {Component}\n\t */\n\tgetParent() {\n\t\treturn this.parent_;\n\t}\n\n\t/**\n\t * Gets the sub component referenced by the given tag and config data,\n\t * creating it if it doesn't yet exist.\n\t * @param {string|!Function} tagOrCtor The tag name.\n\t * @param {!Object} config The config object for the sub component.\n\t * @return {!Component} The sub component.\n\t * @protected\n\t */\n\tgetSubComponent_(tagOrCtor, config) {\n\t\tvar Ctor = tagOrCtor;\n\t\tif (core.isString(Ctor)) {\n\t\t\tCtor = ComponentRegistry.getConstructor(tagOrCtor);\n\t\t}\n\n\t\tvar data = IncrementalDomRenderer.getCurrentData();\n\t\tvar comp;\n\t\tif (core.isDef(config.ref)) {\n\t\t\tcomp = this.match_(this.component_.components[config.ref], Ctor, config);\n\t\t\tthis.component_.addSubComponent(config.ref, comp);\n\t\t\tthis.component_.refs[config.ref] = comp;\n\t\t} else if (core.isDef(config.key)) {\n\t\t\tcomp = this.match_(data.prevComps.keys[config.key], Ctor, config);\n\t\t\tdata.currComps.keys[config.key] = comp;\n\t\t} else {\n\t\t\tvar type = core.getUid(Ctor, true);\n\t\t\tdata.currComps.order[type] = data.currComps.order[type] || [];\n\t\t\tvar order = data.currComps.order[type];\n\t\t\tcomp = this.match_((data.prevComps.order[type] || [])[order.length], Ctor, config);\n\t\t\torder.push(comp);\n\t\t}\n\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Guarantees that the component's element has a parent. That's necessary\n\t * when calling incremental dom's `patchOuter` for now, as otherwise it will\n\t * throw an error if the element needs to be replaced.\n\t * @return {Element} The parent, in case it was added.\n\t * @protected\n\t */\n\tguaranteeParent_() {\n\t\tvar element = this.component_.element;\n\t\tif (!element || !element.parentNode) {\n\t\t\tvar parent = document.createElement('div');\n\t\t\tif (element) {\n\t\t\t\tdom.append(parent, element);\n\t\t\t}\n\t\t\treturn parent;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the `attached` listener. Stores attach data.\n\t * @param {!Object} data\n\t * @protected\n\t */\n\thandleAttached_(data) {\n\t\tthis.attachData_ = data;\n\t}\n\n\t/**\n\t * Handles the event of children having finished being captured.\n\t * @param {!Object} The captured children in tree format.\n\t * @protected\n\t */\n\thandleChildrenCaptured_(tree) {\n\t\tvar {props, tag} = this.componentToRender_;\n\t\tprops.children = this.buildChildren_(tree.props.children);\n\t\tthis.componentToRender_ = null;\n\t\tthis.renderFromTag_(tag, props);\n\t}\n\n\t/**\n\t * Handles a child being rendered via `IncrementalDomChildren.render`. Skips\n\t * component nodes so that they can be rendered the correct way without\n\t * having to recapture both them and their children via incremental dom.\n\t * @param {!Object} node\n\t * @return {boolean}\n\t * @protected\n\t */\n\thandleChildRender_(node) {\n\t\tif (node.tag && IncrementalDomUtils.isComponentTag(node.tag)) {\n\t\t\tnode.props.children = this.buildChildren_(node.props.children);\n\t\t\tthis.renderFromTag_(node.tag, node.props);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\thandleDataManagerCreated_() {\n\t\tsuper.handleDataManagerCreated_();\n\n\t\tvar manager = this.component_.getDataManager();\n\t\tif (!this.component_.constructor.SYNC_UPDATES_MERGED) {\n\t\t\t// If the component is being updated synchronously we'll just reuse the\n\t\t\t// `handleComponentRendererStateKeyChanged_` function from\n\t\t\t// `ComponentRenderer`.\n\t\t\tmanager.on('dataPropChanged', this.handleDataPropChanged_.bind(this));\n\t\t}\n\n\t\tmanager.add(\n\t\t\t'children',\n\t\t\t{\n\t\t\t\tvalidator: Array.isArray,\n\t\t\t\tvalue: emptyChildren_\n\t\t\t},\n\t\t\tthis.config_.children || emptyChildren_\n\t\t);\n\t}\n\n\t/**\n\t * Handles the `dataPropChanged` event. Stores data that has changed since the\n\t * last render.\n\t * @param {!Object} data\n\t * @protected\n\t */\n\thandleDataPropChanged_(data) {\n\t\tthis.changes_[data.key] = data;\n\t}\n\n\t/**\n\t * Handles an intercepted call to the attributes default handler from\n\t * incremental dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {!Element} element\n\t * @param {string} name\n\t * @param {*} value\n\t * @protected\n\t */\n\thandleInterceptedAttributesCall_(originalFn, element, name, value) {\n\t\tvar eventName = this.getEventFromListenerAttr_(name);\n\t\tif (eventName) {\n\t\t\tthis.attachEvent_(element, name, eventName, value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (name === 'checked') {\n\t\t\t// This is a temporary fix to account for incremental dom setting\n\t\t\t// \"checked\" as an attribute only, which can cause bugs since that won't\n\t\t\t// necessarily check/uncheck the element it's set on. See\n\t\t\t// https://github.com/google/incremental-dom/issues/198 for more details.\n\t\t\tvalue = core.isDefAndNotNull(value) && value !== false;\n\t\t}\n\n\t\tif (name === 'value' && element.value !== value) {\n\t\t\t// This is a temporary fix to account for incremental dom setting\n\t\t\t// \"value\" as an attribute only, which can cause bugs since that won't\n\t\t\t// necessarily update the input's content it's set on. See\n\t\t\t// https://github.com/google/incremental-dom/issues/239 for more details.\n\t\t\t// We only do this if the new value is different though, as otherwise the\n\t\t\t// browser will automatically move the typing cursor to the end of the\n\t\t\t// field.\n\t\t\telement[name] = value;\n\t\t}\n\n\t\tif (core.isBoolean(value)) {\n\t\t\t// Incremental dom sets boolean values as string data attributes, which\n\t\t\t// is counter intuitive. This changes the behavior to use the actual\n\t\t\t// boolean value.\n\t\t\telement[name] = value;\n\t\t\tif (value) {\n\t\t\t\telement.setAttribute(name, '');\n\t\t\t} else {\n\t\t\t\telement.removeAttribute(name);\n\t\t\t}\n\t\t} else {\n\t\t\toriginalFn(element, name, value);\n\t\t}\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementClose` function from incremental\n\t * dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @protected\n\t */\n\thandleInterceptedCloseCall_(originalFn, tag) {\n\t\tthis.emit(IncrementalDomRenderer.ELEMENT_CLOSED, {tag});\n\t\tvar element = originalFn(tag);\n\t\tthis.resetData_(domData.get(element).incDomData_);\n\t\treturn element;\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @protected\n\t */\n\thandleInterceptedOpenCall_(originalFn, tag) {\n\t\tif (IncrementalDomUtils.isComponentTag(tag)) {\n\t\t\treturn this.handleSubComponentCall_.apply(this, arguments);\n\t\t} else {\n\t\t\treturn this.handleRegularCall_.apply(this, arguments);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the `dataPropChanged` event. Overrides original method from\n\t * `ComponentRenderer` to guarantee that `IncrementalDomRenderer`'s logic\n\t * will run first.\n\t * @param {!Object} data\n\t * @override\n\t * @protected\n\t */\n\thandleManagerDataPropChanged_(data) {\n\t\tthis.handleDataPropChanged_(data);\n\t\tsuper.handleManagerDataPropChanged_(data);\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom, done for a regular element. Adds any inline listeners found on the\n\t * first render and makes sure that component root elements are always reused.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @protected\n\t */\n\thandleRegularCall_(originalFn, ...args) {\n\t\tthis.emit(IncrementalDomRenderer.ELEMENT_OPENED, {args});\n\t\tvar currComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar currRenderer = currComp.getRenderer();\n\t\tif (!currRenderer.rootElementReached_) {\n\t\t\tif (currRenderer.config_.key) {\n\t\t\t\targs[1] = currRenderer.config_.key;\n\t\t\t}\n\t\t\tvar elementClasses = currComp.getDataManager().get('elementClasses');\n\t\t\tif (elementClasses) {\n\t\t\t\tthis.addElementClasses_(elementClasses, args);\n\t\t\t}\n\t\t}\n\n\n\t\tvar node = originalFn.apply(null, args);\n\t\tthis.attachDecoratedListeners_(node, args);\n\t\tthis.updateElementIfNotReached_(node);\n\n\t\tconst config = IncrementalDomUtils.buildConfigFromCall(args);\n\t\tif (core.isDefAndNotNull(config.ref)) {\n\t\t\tthis.component_.refs[config.ref] = node;\n\t\t}\n\t\treturn node;\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom, done for a sub component element. Creates and updates the appropriate\n\t * sub component.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @protected\n\t */\n\thandleSubComponentCall_(originalFn, ...args) {\n\t\tvar props = IncrementalDomUtils.buildConfigFromCall(args);\n\t\tthis.componentToRender_ = {\n\t\t\tprops,\n\t\t\ttag: args[0]\n\t\t};\n\t\tIncrementalDomChildren.capture(this, this.handleChildrenCaptured_);\n\t}\n\n\t/**\n\t * Checks if the component's data has changed.\n\t * @return {boolean}\n\t * @protected\n\t */\n\thasDataChanged_() {\n\t\treturn Object.keys(this.changes_).length > 0;\n\t}\n\n\t/**\n\t * Intercepts incremental dom calls from this component.\n\t * @protected\n\t */\n\tintercept_() {\n\t\tIncrementalDomAop.startInterception({\n\t\t\tattributes: this.handleInterceptedAttributesCall_,\n\t\t\telementClose: this.handleInterceptedCloseCall_,\n\t\t\telementOpen: this.handleInterceptedOpenCall_\n\t\t});\n\t}\n\n\t/**\n\t * Checks if the given object is an incremental dom node.\n\t * @param {!Object} node\n\t * @return {boolean}\n\t */\n\tstatic isIncDomNode(node) {\n\t\treturn !!node[IncrementalDomChildren.CHILD_OWNER];\n\t}\n\n\t/**\n\t * Returns the given component if it matches the specified constructor\n\t * function. Otherwise, returns a new instance of the given constructor. On\n\t * both cases the component's state and config will be updated.\n\t * @param {Component} comp\n\t * @param {!function()} Ctor\n\t * @param {!Object} config\n\t * @return {!Component}\n\t * @protected\n\t */\n\tmatch_(comp, Ctor, config) {\n\t\tif (!comp || comp.constructor !== Ctor) {\n\t\t\tcomp = new Ctor(config, false);\n\t\t}\n\t\tif (comp.wasRendered) {\n\t\t\tcomp.getRenderer().startSkipUpdates();\n\t\t\tcomp.getDataManager().replaceNonInternal(config);\n\t\t\tcomp.getRenderer().stopSkipUpdates();\n\t\t}\n\t\tcomp.getRenderer().config_ = config;\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Patches the component's element with the incremental dom function calls\n\t * done by `renderInsidePatchDontSkip_`.\n\t */\n\tpatch() {\n\t\tif (!this.component_.element && this.parent_) {\n\t\t\t// If the component has no content but was rendered from another component,\n\t\t\t// we'll need to patch this parent to make sure that any new content will\n\t\t\t// be added in the right place.\n\t\t\tthis.parent_.getRenderer().patch();\n\t\t\treturn;\n\t\t}\n\n\t\tvar tempParent = this.guaranteeParent_();\n\t\tif (tempParent) {\n\t\t\tIncrementalDOM.patch(tempParent, this.renderInsidePatchDontSkip_);\n\t\t\tdom.exitDocument(this.component_.element);\n\t\t\tif (this.component_.element && this.component_.inDocument) {\n\t\t\t\tthis.component_.renderElement_(\n\t\t\t\t\tthis.attachData_.parent,\n\t\t\t\t\tthis.attachData_.sibling\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tvar element = this.component_.element;\n\t\t\tIncrementalDOM.patchOuter(element, this.renderInsidePatchDontSkip_);\n\t\t\tif (!this.component_.element) {\n\t\t\t\tdom.exitDocument(element);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes duplicate css classes from the given string.\n\t * @param {string} cssClasses\n\t * @return {string}\n\t * @protected\n\t */\n\tremoveDuplicateClasses_(cssClasses) {\n\t\tvar noDuplicates = [];\n\t\tvar all = cssClasses.split(/\\s+/);\n\t\tvar used = {};\n\t\tfor (var i = 0; i < all.length; i++) {\n\t\t\tif (!used[all[i]]) {\n\t\t\t\tused[all[i]] = true;\n\t\t\t\tnoDuplicates.push(all[i]);\n\t\t\t}\n\t\t}\n\t\treturn noDuplicates.join(' ');\n\t}\n\n\t/**\n\t * Creates and renders the given function, which can either be a simple\n\t * incremental dom function or a component constructor.\n\t * @param {!function()} fnOrCtor Either be a simple incremental dom function\n\t or a component constructor.\n\t * @param {Object|Element=} opt_dataOrElement Optional config data for the\n\t *     function or parent for the rendered content.\n\t * @param {Element=} opt_parent Optional parent for the rendered content.\n\t * @return {!Component} The rendered component's instance.\n\t */\n\tstatic render(fnOrCtor, opt_dataOrElement, opt_parent) {\n\t\tif (!Component.isComponentCtor(fnOrCtor)) {\n\t\t\tvar fn = fnOrCtor;\n\t\t\tclass TempComponent extends Component {\n\t\t\t\tcreated() {\n\t\t\t\t\tif (IncrementalDomRenderer.getComponentBeingRendered()) {\n\t\t\t\t\t\tthis.getRenderer().updateContext_(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trender() {\n\t\t\t\t\tfn(this.getRenderer().config_);\n\t\t\t\t}\n\t\t\t}\n\t\t\tTempComponent.RENDERER = IncrementalDomRenderer;\n\t\t\tfnOrCtor = TempComponent;\n\t\t}\n\t\treturn Component.render(fnOrCtor, opt_dataOrElement, opt_parent);\n\t}\n\n\t/**\n\t * Renders the renderer's component for the first time, patching its element\n\t * through the incremental dom function calls done by `renderIncDom`.\n\t */\n\trender() {\n\t\tthis.patch();\n\t}\n\n\t/**\n\t * Renders the given child node via its owner renderer.\n\t * @param {!Object} child\n\t */\n\tstatic renderChild(child) {\n\t\tchild[IncrementalDomChildren.CHILD_OWNER].renderChild(child);\n\t}\n\n\t/**\n\t * Renders the given child node.\n\t * @param {!Object} child\n\t */\n\trenderChild(child) {\n\t\tthis.intercept_();\n\t\tIncrementalDomChildren.render(child, this.handleChildRender_);\n\t\tIncrementalDomAop.stopInterception();\n\t}\n\n\t/**\n\t * Renders the contents for the given tag.\n\t * @param {!function()|string} tag\n\t * @param {!Object} config\n\t * @protected\n\t */\n\trenderFromTag_(tag, config) {\n\t\tif (core.isString(tag) || tag.prototype.getRenderer) {\n\t\t\tvar comp = this.renderSubComponent_(tag, config);\n\t\t\tthis.updateElementIfNotReached_(comp.element);\n\t\t\treturn comp.element;\n\t\t} else {\n\t\t\treturn tag(config);\n\t\t}\n\t}\n\n\t/**\n\t * Calls functions from `IncrementalDOM` to build the component element's\n\t * content. Can be overriden by subclasses (for integration with template\n\t * engines for example).\n\t */\n\trenderIncDom() {\n\t\tif (this.component_.render) {\n\t\t\tthis.component_.render();\n\t\t} else {\n\t\t\tIncrementalDOM.elementVoid('div');\n\t\t}\n\t}\n\n\t/**\n\t * Runs the incremental dom functions for rendering this component, but\n\t * doesn't call `patch` yet. Rather, this will be the function that should be\n\t * called by `patch`.\n\t */\n\trenderInsidePatch() {\n\t\tif (this.component_.wasRendered &&\n\t\t\t!this.shouldUpdate() &&\n\t\t\tIncrementalDOM.currentPointer() === this.component_.element) {\n\t\t\tif (this.component_.element) {\n\t\t\t\tIncrementalDOM.skipNode();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.renderInsidePatchDontSkip_();\n\t}\n\n\t/**\n\t * The same as `renderInsidePatch`, but without the check that may skip the\n\t * render action.\n\t * @protected\n\t */\n\trenderInsidePatchDontSkip_() {\n\t\tIncrementalDomRenderer.startedRenderingComponent(this.component_);\n\t\tthis.clearChanges_();\n\t\tthis.rootElementReached_ = false;\n\t\tIncrementalDomUnusedComponents.schedule(this.childComponents_);\n\t\tthis.childComponents_ = [];\n\t\tthis.component_.refs = {};\n\t\tthis.intercept_();\n\t\tthis.renderIncDom();\n\t\tIncrementalDomAop.stopInterception();\n\t\tif (!this.rootElementReached_) {\n\t\t\tthis.component_.element = null;\n\t\t}\n\t\tthis.emit('rendered', !this.isRendered_);\n\t\tIncrementalDomRenderer.finishedRenderingComponent();\n\t\tthis.resetData_(this.incDomData_);\n\t}\n\n\t/**\n\t * This updates the sub component that is represented by the given data.\n\t * The sub component is created, added to its parent and rendered. If it\n\t * had already been rendered before though, it will only have its state\n\t * updated instead.\n\t * @param {string|!function()} tagOrCtor The tag name or constructor function.\n\t * @param {!Object} config The config object for the sub component.\n\t * @return {!Component} The updated sub component.\n\t * @protected\n\t */\n\trenderSubComponent_(tagOrCtor, config) {\n\t\tvar comp = this.getSubComponent_(tagOrCtor, config);\n\t\tthis.updateContext_(comp);\n\t\tvar renderer = comp.getRenderer();\n\t\tif (renderer instanceof IncrementalDomRenderer) {\n\t\t\tvar parentComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\t\tparentComp.getRenderer().childComponents_.push(comp);\n\t\t\trenderer.parent_ = parentComp;\n\t\t\trenderer.owner_ = this.component_;\n\t\t\trenderer.renderInsidePatch();\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t'IncrementalDomRenderer doesn\\'t support rendering sub components ' +\n\t\t\t\t'that don\\'t use IncrementalDomRenderer as well, like:',\n\t\t\t\tcomp\n\t\t\t);\n\t\t}\n\t\tif (!comp.wasRendered) {\n\t\t\tcomp.renderAsSubComponent();\n\t\t}\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Resets the given incremental dom data object, preparing it for the next\n\t * pass.\n\t * @param {Object} data\n\t * @protected\n\t */\n\tresetData_(data) {\n\t\tif (data) {\n\t\t\tdata.prevComps.keys = data.currComps.keys;\n\t\t\tdata.prevComps.order = data.currComps.order;\n\t\t\tdata.currComps.keys = {};\n\t\t\tdata.currComps.order = {};\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the component should be updated with the current state changes.\n\t * Can be overridden by subclasses or implemented by components to provide\n\t * customized behavior (only updating when a state property used by the\n\t * template changes, for example).\n\t * @return {boolean}\n\t */\n\tshouldUpdate() {\n\t\tif (!this.hasDataChanged_()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.component_.shouldUpdate) {\n\t\t\treturn this.component_.shouldUpdate(...this.buildShouldUpdateArgs_());\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Skips the next disposal of children components, by clearing the array as\n\t * if there were no children rendered the last time. This can be useful for\n\t * allowing components to be reused by other parent components in separate\n\t * render update cycles.\n\t */\n\tskipNextChildrenDisposal() {\n\t\tthis.childComponents_ = [];\n\t}\n\n\t/**\n\t * Stores the component that has just started being rendered.\n\t * @param {!Component} comp\n\t */\n\tstatic startedRenderingComponent(comp) {\n\t\trenderingComponents_.push(comp);\n\t}\n\n\t/**\n\t * Updates the renderer's component when state changes, patching its element\n\t * through the incremental dom function calls done by `renderIncDom`. Makes\n\t * sure that it won't cause a rerender if the only change was for the\n\t * \"element\" property.\n\t */\n\tupdate() {\n\t\tif (this.shouldUpdate()) {\n\t\t\tthis.patch();\n\t\t}\n\t}\n\n\t/**\n\t * Updates this renderer's component's element with the given values, unless\n\t * it has already been reached by an earlier call.\n\t * @param {!Element} node\n\t * @protected\n\t */\n\tupdateElementIfNotReached_(node) {\n\t\tvar currComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar currRenderer = currComp.getRenderer();\n\t\tif (!currRenderer.rootElementReached_) {\n\t\t\tcurrRenderer.rootElementReached_ = true;\n\t\t\tif (currComp.element !== node) {\n\t\t\t\tcurrComp.element = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the given component's context according to the data from the\n\t * component that is currently being rendered.\n\t * @param {!Component} comp\n\t * @protected\n\t */\n\tupdateContext_(comp) {\n\t\tvar context = comp.context;\n\t\tvar parent = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar childContext = parent.getChildContext ? parent.getChildContext() : {};\n\t\tobject.mixin(context, parent.context, childContext);\n\t\tcomp.context = context;\n\t}\n}\n\nvar renderingComponents_ = [];\nvar emptyChildren_ = [];\n\n// Constants used as event names.\nIncrementalDomRenderer.ELEMENT_OPENED = 'elementOpened';\nIncrementalDomRenderer.ELEMENT_CLOSED = 'elementClosed';\n\n// Regex pattern used to find inline listeners.\nIncrementalDomRenderer.LISTENER_REGEX = /^(?:on([A-Z]\\w+))|(?:data-on(\\w+))$/;\n\nexport default IncrementalDomRenderer;\n"],"sourceRoot":"/source/"}