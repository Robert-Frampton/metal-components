{"version":3,"sources":["IncrementalDomUnusedComponents.js"],"names":["comps_","disposing_","IncrementalDomUnusedComponents","disposeUnused","i","length","comp","isDisposed","getRenderer","getParent","element","dispose","schedule","comps","parent_","push"],"mappings":";AAAA;;;;;;;;;;;;AAEA,KAAIA,SAAS,EAAb;AACA,KAAIC,aAAa,KAAjB;;KAEMC,8B;;;;;iCAKEC,a,4BAAgB;AACtB,OAAIF,UAAJ,EAAgB;AACf;AACA;AACDA,gBAAa,IAAb;;AAEA,QAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIJ,OAAOK,MAA3B,EAAmCD,GAAnC,EAAwC;AACvC,QAAIE,OAAON,OAAOI,CAAP,CAAX;AACA,QAAI,CAACE,KAAKC,UAAL,EAAD,IAAsB,CAACD,KAAKE,WAAL,GAAmBC,SAAnB,EAA3B,EAA2D;AAC1D;AACA;AACAH,UAAKI,OAAL,GAAe,IAAf;AACAJ,UAAKK,OAAL;AACA;AACD;AACDX,YAAS,EAAT;AACAC,gBAAa,KAAb;AACA,G;;iCAOMW,Q,qBAASC,K,EAAO;AACtB,QAAK,IAAIT,IAAI,CAAb,EAAgBA,IAAIS,MAAMR,MAA1B,EAAkCD,GAAlC,EAAuC;AACtC,QAAI,CAACS,MAAMT,CAAN,EAASG,UAAT,EAAL,EAA4B;AAC3BM,WAAMT,CAAN,EAASI,WAAT,GAAuBM,OAAvB,GAAiC,IAAjC;AACAd,YAAOe,IAAP,CAAYF,MAAMT,CAAN,CAAZ;AACA;AACD;AACD,G;;;;;mBAGaF,8B","file":"node_modules/metal-incremental-dom/src/cleanup/IncrementalDomUnusedComponents.js","sourcesContent":["'use strict';\n\nvar comps_ = [];\nvar disposing_ = false;\n\nclass IncrementalDomUnusedComponents {\n\t/**\n\t * Disposes all sub components that were not rerendered since the last\n\t * time this function was scheduled.\n\t */\n\tstatic disposeUnused() {\n\t\tif (disposing_) {\n\t\t\treturn;\n\t\t}\n\t\tdisposing_ = true;\n\n\t\tfor (var i = 0; i < comps_.length; i++) {\n\t\t\tvar comp = comps_[i];\n\t\t\tif (!comp.isDisposed() && !comp.getRenderer().getParent()) {\n\t\t\t\t// Don't let disposing cause the element to be removed, since it may\n\t\t\t\t// be currently being reused by another component.\n\t\t\t\tcomp.element = null;\n\t\t\t\tcomp.dispose();\n\t\t\t}\n\t\t}\n\t\tcomps_ = [];\n\t\tdisposing_ = false;\n\t}\n\n\t/**\n\t * Schedules the given components to be checked and disposed if not used\n\t * anymore, when `IncrementalDomUnusedComponents.disposeUnused` is called.\n\t * @param {!Array<!Component>} comps\n\t */\n\tstatic schedule(comps) {\n\t\tfor (var i = 0; i < comps.length; i++) {\n\t\t\tif (!comps[i].isDisposed()) {\n\t\t\t\tcomps[i].getRenderer().parent_ = null;\n\t\t\t\tcomps_.push(comps[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default IncrementalDomUnusedComponents;\n"],"sourceRoot":"/source/"}