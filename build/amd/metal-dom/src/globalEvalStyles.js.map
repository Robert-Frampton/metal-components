{"version":3,"sources":["globalEvalStyles.js"],"names":["globalEvalStyles","run","text","opt_appendFn","style","document","createElement","innerHTML","head","appendChild","runFile","href","opt_callback","link","rel","runStyle","callback","nextTick","tagName","once","runStylesInElement","element","styles","querySelectorAll","length","loadCount","i"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;KAQMA,gB;;;;;mBAQEC,G,gBAAIC,I,EAAMC,Y,EAAc;AAC9B,OAAIC,QAAQC,SAASC,aAAT,CAAuB,OAAvB,CAAZ;AACAF,SAAMG,SAAN,GAAkBL,IAAlB;AACA,OAAIC,YAAJ,EAAkB;AACjBA,iBAAaC,KAAb;AACA,IAFD,MAEO;AACNC,aAASG,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACA;AACD,UAAOA,KAAP;AACA,G;;mBAWMM,O,oBAAQC,I,EAAMC,Y,EAAcT,Y,EAAc;AAChD,OAAIU,OAAOR,SAASC,aAAT,CAAuB,MAAvB,CAAX;AACAO,QAAKC,GAAL,GAAW,YAAX;AACAD,QAAKF,IAAL,GAAYA,IAAZ;AACAX,oBAAiBe,QAAjB,CAA0BF,IAA1B,EAAgCD,YAAhC,EAA8CT,YAA9C;AACA,UAAOU,IAAP;AACA,G;;mBAWME,Q,qBAASX,K,EAAOQ,Y,EAAcT,Y,EAAc;AAClD,OAAIa,WAAW,SAAXA,QAAW,GAAW;AACzBJ,oBAAgBA,cAAhB;AACA,IAFD;AAGA,OAAIR,MAAMU,GAAN,IAAaV,MAAMU,GAAN,KAAc,YAA/B,EAA6C;AAC5C,iBAAMG,QAAN,CAAeD,QAAf;AACA;AACA;;AAED,OAAIZ,MAAMc,OAAN,KAAkB,OAAtB,EAA+B;AAC9B,iBAAMD,QAAN,CAAeD,QAAf;AACA,IAFD,MAEO;AACN,kBAAIG,IAAJ,CAASf,KAAT,EAAgB,MAAhB,EAAwBY,QAAxB;AACA,kBAAIG,IAAJ,CAASf,KAAT,EAAgB,OAAhB,EAAyBY,QAAzB;AACA;;AAED,OAAIb,YAAJ,EAAkB;AACjBA,iBAAaC,KAAb;AACA,IAFD,MAEO;AACNC,aAASG,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACA;;AAED,UAAOA,KAAP;AACA,G;;mBAUMgB,kB,+BAAmBC,O,EAAST,Y,EAAcT,Y,EAAc;AAC9D,OAAImB,SAASD,QAAQE,gBAAR,CAAyB,YAAzB,CAAb;AACA,OAAID,OAAOE,MAAP,KAAkB,CAAlB,IAAuBZ,YAA3B,EAAyC;AACxC,iBAAMK,QAAN,CAAeL,YAAf;AACA;AACA;;AAED,OAAIa,YAAY,CAAhB;AACA,OAAIT,WAAW,SAAXA,QAAW,GAAW;AACzB,QAAIJ,gBAAgB,EAAEa,SAAF,KAAgBH,OAAOE,MAA3C,EAAmD;AAClD,kBAAMP,QAAN,CAAeL,YAAf;AACA;AACD,IAJD;AAKA,QAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAIJ,OAAOE,MAA3B,EAAmCE,GAAnC,EAAwC;AACvC1B,qBAAiBe,QAAjB,CAA0BO,OAAOI,CAAP,CAA1B,EAAqCV,QAArC,EAA+Cb,YAA/C;AACA;AACD,G;;;;;mBAGaH,gB","file":"node_modules/metal-dom/src/globalEvalStyles.js","sourcesContent":["'use strict';\n\nimport { async } from 'metal';\nimport dom from './dom';\n\n/**\n * Utility functions for running styles.\n */\nclass globalEvalStyles {\n\t/**\n\t * Evaluates the given style.\n\t * @param {string} text\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic run(text, opt_appendFn) {\n\t\tvar style = document.createElement('style');\n\t\tstyle.innerHTML = text;\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates the given style file.\n\t * @param {string} href The file's path.\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the styles has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic runFile(href, opt_callback, opt_appendFn) {\n\t\tvar link = document.createElement('link');\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = href;\n\t\tglobalEvalStyles.runStyle(link, opt_callback, opt_appendFn);\n\t\treturn link;\n\t}\n\n\t/**\n\t * Evaluates the code referenced by the given style/link element.\n\t * @param {!Element} style\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t *  @return {Element} style\n\t */\n\tstatic runStyle(style, opt_callback, opt_appendFn) {\n\t\tvar callback = function() {\n\t\t\topt_callback && opt_callback();\n\t\t};\n\t\tif (style.rel && style.rel !== 'stylesheet') {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tif (style.tagName === 'STYLE') {\n\t\t\tasync.nextTick(callback);\n\t\t} else {\n\t\t\tdom.once(style, 'load', callback);\n\t\t\tdom.once(style, 'error', callback);\n\t\t}\n\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates any style present in the given element.\n\t * @params {!Element} element\n\t * @param {function()=} opt_callback Optional function to be called when the\n\t *   style has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runStylesInElement(element, opt_callback, opt_appendFn) {\n\t\tvar styles = element.querySelectorAll('style,link');\n\t\tif (styles.length === 0 && opt_callback) {\n\t\t\tasync.nextTick(opt_callback);\n\t\t\treturn;\n\t\t}\n\n\t\tvar loadCount = 0;\n\t\tvar callback = function() {\n\t\t\tif (opt_callback && ++loadCount === styles.length) {\n\t\t\t\tasync.nextTick(opt_callback);\n\t\t\t}\n\t\t};\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tglobalEvalStyles.runStyle(styles[i], callback, opt_appendFn);\n\t\t}\n\t}\n}\n\nexport default globalEvalStyles;\n"],"sourceRoot":"/source/"}