{"version":3,"sources":["dom.js"],"names":["NEXT_TARGET","USE_CAPTURE","blur","error","focus","invalid","load","scroll","dom","elements","classes","isObject","isString","length","i","addClassesWithNative_","addClassesWithoutNative_","element","split","forEach","className","classList","add","elementClassName","classesToAppend","indexOf","eventName","listener","data","get","addToArr_","listeners","selector","delegating","selectors","arr","key","value","push","handle","on","handleDelegateEvent_","match","parentNode","parent","child","buildFragment","NodeList","childArr","Array","prototype","slice","call","appendChild","htmlString","tempDiv","document","createElement","innerHTML","removeChild","firstChild","fragment","createDocumentFragment","element1","element2","isDocument","documentElement","contains","selectorOrTarget","callback","opt_default","customConfig","customEvents","delegate","originalEvent","handler","bind","defaultListener_","attachDelegateEvent_","addSelectorListener_","addElementListener_","node","currElement","isAble","matchesSelector","disabled","append","body","event","normalizeDelegateEvent_","isDef","target","ret","container","currentTarget","limit","defFns","stopped","delegateTarget","triggerMatchedListeners_","defaultPrevented","fn","hasClassWithNative_","hasClassWithoutNative_","childNodes","nodeType","p","Element","m","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","matchFallback_","nodes","querySelectorAll","nextSibling","stopPropagation","stopPropagation_","stopImmediatePropagation","stopImmediatePropagation_","opt_capture","addEventListener","domEventHandle","removeListener","apply","arguments","closest","removeClassesWithNative_","removeClassesWithoutNative_","remove","replace","trim","insertBefore","stoppedImmediate","Event","elementsByTag","selectorOrElement","isElement","getElementById","substr","querySelector","toggleClassesWithNative_","toggleClassesWithoutNative_","toggle","classIndex","substring","opt_eventObj","isAbleToInteractWith_","eventObj","createEvent","initEvent","mixin","dispatchEvent","defaultFns","type","button","triggerListeners_","selectorsMap","Object","keys"],"mappings":"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","file":"node_modules/metal-dom/src/dom.js","sourcesContent":["'use strict';\n\nimport { core, object } from 'metal';\nimport domData from './domData';\nimport DomDelegatedEventHandle from './DomDelegatedEventHandle';\nimport DomEventHandle from './DomEventHandle';\n\nconst NEXT_TARGET = '__metal_next_target__';\nconst USE_CAPTURE = {\n\tblur: true,\n\terror: true,\n\tfocus: true,\n\tinvalid: true,\n\tload: true,\n\tscroll: true\n};\n\nclass dom {\n\t/**\n\t * Adds the requested CSS classes to an element.\n\t * @param {!Element|!Nodelist} elements The element or elements to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t */\n\tstatic addClasses(elements, classes) {\n\t\tif (!core.isObject(elements) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!elements.length) {\n\t\t\telements = [elements];\n\t\t}\n\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\tif ('classList' in elements[i]) {\n\t\t\t\tdom.addClassesWithNative_(elements[i], classes);\n\t\t\t} else {\n\t\t\t\tdom.addClassesWithoutNative_(elements[i], classes);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\tif (className) {\n\t\t\t\telement.classList.add(className);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element without using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\t\tvar classesToAppend = '';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = classes[i];\n\n\t\t\tif (elementClassName.indexOf(' ' + className + ' ') === -1) {\n\t\t\t\tclassesToAppend += ' ' + className;\n\t\t\t}\n\t\t}\n\n\t\tif (classesToAppend) {\n\t\t\telement.className = element.className + classesToAppend;\n\t\t}\n\t}\n\n\t/**\n\t * Adds an event listener to the given element, to be triggered via delegate.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @param {!function()} listener\n\t * @protected\n\t */\n\tstatic addElementListener_(element, eventName, listener) {\n\t\tvar data = domData.get(element);\n\t\tdom.addToArr_(data.listeners, eventName, listener);\n\t}\n\n\t/**\n\t * Adds an event listener to the given element, to be triggered via delegate\n\t * selectors.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {!function()} listener\n\t * @protected\n\t */\n\tstatic addSelectorListener_(element, eventName, selector, listener) {\n\t\tvar data = domData.get(element);\n\t\tdom.addToArr_(data.delegating[eventName].selectors, selector, listener);\n\t}\n\n\t/**\n\t * Adds a value to an array inside an object, creating it first if it doesn't\n\t * yet exist.\n\t * @param {!Array} arr\n\t * @param {string} key\n\t * @param {*} value\n\t * @protected\n\t */\n\tstatic addToArr_(arr, key, value) {\n\t\tif (!arr[key]) {\n\t\t\tarr[key] = [];\n\t\t}\n\t\tarr[key].push(value);\n\t}\n\n\t/**\n\t * Attaches a delegate listener, unless there's already one attached.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @protected\n\t */\n\tstatic attachDelegateEvent_(element, eventName) {\n\t\tvar data = domData.get(element);\n\t\tif (!data.delegating[eventName]) {\n\t\t\tdata.delegating[eventName] = {\n\t\t\t\thandle: dom.on(\n\t\t\t\t\telement,\n\t\t\t\t\teventName,\n\t\t\t\t\tdom.handleDelegateEvent_,\n\t\t\t\t\t!!USE_CAPTURE[eventName]\n\t\t\t\t),\n\t\t\t\tselectors: {}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Gets the closest element up the tree from the given element (including\n\t * itself) that matches the specified selector, or null if none match.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {Element}\n\t */\n\tstatic closest(element, selector) {\n\t\twhile (element && !dom.match(element, selector)) {\n\t\t\telement = element.parentNode;\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Appends a child node with text or other nodes to a parent node. If\n\t * child is a HTML string it will be automatically converted to a document\n\t * fragment before appending it to the parent.\n\t * @param {!Element} parent The node to append nodes to.\n\t * @param {!(Element|NodeList|string)} child The thing to append to the parent.\n\t * @return {!Element} The appended child.\n\t */\n\tstatic append(parent, child) {\n\t\tif (core.isString(child)) {\n\t\t\tchild = dom.buildFragment(child);\n\t\t}\n\t\tif (child instanceof NodeList) {\n\t\t\tvar childArr = Array.prototype.slice.call(child);\n\t\t\tfor (var i = 0; i < childArr.length; i++) {\n\t\t\t\tparent.appendChild(childArr[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tparent.appendChild(child);\n\t\t}\n\t\treturn child;\n\t}\n\n\t/**\n\t * Helper for converting a HTML string into a document fragment.\n\t * @param {string} htmlString The HTML string to convert.\n\t * @return {!Element} The resulting document fragment.\n\t */\n\tstatic buildFragment(htmlString) {\n\t\tvar tempDiv = document.createElement('div');\n\t\ttempDiv.innerHTML = '<br>' + htmlString;\n\t\ttempDiv.removeChild(tempDiv.firstChild);\n\n\t\tvar fragment = document.createDocumentFragment();\n\t\twhile (tempDiv.firstChild) {\n\t\t\tfragment.appendChild(tempDiv.firstChild);\n\t\t}\n\t\treturn fragment;\n\t}\n\n\t/**\n\t * Checks if the first element contains the second one.\n\t * @param {!Element} element1\n\t * @param {!Element} element2\n\t * @return {boolean}\n\t */\n\tstatic contains(element1, element2) {\n\t\tif (core.isDocument(element1)) {\n\t\t\t// document.contains is not defined on IE9, so call it on documentElement instead.\n\t\t\treturn element1.documentElement.contains(element2);\n\t\t} else {\n\t\t\treturn element1.contains(element2);\n\t\t}\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element, but only calls the\n\t * given callback listener when it's triggered by elements that match the\n\t * given selector or target element.\n\t * @param {!Element} element The DOM element the event should be listened on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!Element|string} selectorOrTarget Either an element or css selector\n\t *     that should match the event for the listener to be triggered.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *     is triggered. It will receive the normalized event object.\n\t * @param {boolean=} opt_default Optional flag indicating if this is a default\n\t *     listener. That means that it would only be executed after all non\n\t *     default listeners, and only if the event isn't prevented via\n\t *     `preventDefault`.\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\tstatic delegate(element, eventName, selectorOrTarget, callback, opt_default) {\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.delegate) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\n\t\tif (opt_default) {\n\t\t\t// Wrap callback so we don't set property directly on it.\n\t\t\tcallback = callback.bind();\n\t\t\tcallback.defaultListener_ = true;\n\t\t}\n\n\t\tdom.attachDelegateEvent_(element, eventName);\n\t\tif (core.isString(selectorOrTarget)) {\n\t\t\tdom.addSelectorListener_(element, eventName, selectorOrTarget, callback);\n\t\t} else {\n\t\t\tdom.addElementListener_(selectorOrTarget, eventName, callback);\n\t\t}\n\n\t\treturn new DomDelegatedEventHandle(\n\t\t\tcore.isString(selectorOrTarget) ? element : selectorOrTarget,\n\t\t\teventName,\n\t\t\tcallback,\n\t\t\tcore.isString(selectorOrTarget) ? selectorOrTarget : null\n\t\t);\n\t}\n\n\t/**\n\t * Verifies if the element is able to trigger the Click event,\n\t * simulating browsers behaviour, avoiding event listeners to be called by dom.triggerEvent method.\n\t * @param {Element} node Element to be checked.\n\t * @param {string} eventName The event name.\n\t */\n\tstatic isAbleToInteractWith_(node, eventName) {\n\t\tvar currElement = node;\n\t\tvar isAble = true;\n\t\tvar matchesSelector = 'button, input, select, textarea, fieldset';\n\n\t\tif (eventName === 'click') {\n\t\t\twhile (currElement) {\n\t\t\t\tif (currElement.disabled && dom.match(currElement, matchesSelector)) {\n\t\t\t\t\tisAble = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcurrElement = currElement.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn isAble;\n\t}\n\n\t/**\n\t * Inserts node in document as last element.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic enterDocument(node) {\n\t\tnode && dom.append(document.body, node);\n\t}\n\n\t/**\n\t * Removes node from document.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic exitDocument(node) {\n\t\tif (node && node.parentNode) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t}\n\n\t/**\n\t * This is called when an event is triggered by a delegate listener. All\n\t * matching listeners of this event type from `target` to `currentTarget` will\n\t * be triggered.\n\t * @param {!Event} event The event payload.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic handleDelegateEvent_(event) {\n\t\tdom.normalizeDelegateEvent_(event);\n\t\tvar currElement = core.isDef(event[NEXT_TARGET]) ?\n\t\t\tevent[NEXT_TARGET] :\n\t\t\tevent.target;\n\t\tvar ret = true;\n\t\tvar container = event.currentTarget;\n\t\tvar limit = event.currentTarget.parentNode;\n\t\tvar defFns = [];\n\n\t\twhile (currElement && currElement !== limit && !event.stopped) {\n\t\t\tevent.delegateTarget = currElement;\n\t\t\tret &= dom.triggerMatchedListeners_(container, currElement, event, defFns);\n\t\t\tcurrElement = currElement.parentNode;\n\t\t}\n\n\t\tfor (var i = 0; i < defFns.length && !event.defaultPrevented; i++) {\n\t\t\tevent.delegateTarget = defFns[i].element;\n\t\t\tret &= defFns[i].fn(event);\n\t\t}\n\n\t\tevent.delegateTarget = null;\n\t\tevent[NEXT_TARGET] = limit;\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t */\n\tstatic hasClass(element, className) {\n\t\tif ('classList' in element) {\n\t\t\treturn dom.hasClassWithNative_(element, className);\n\t\t} else {\n\t\t\treturn dom.hasClassWithoutNative_(element, className);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithNative_(element, className) {\n\t\treturn element.classList.contains(className);\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class without using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithoutNative_(element, className) {\n\t\treturn (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n\t}\n\n\t/**\n\t * Checks if the given element is empty or not.\n\t * @param {!Element} element\n\t * @return {boolean}\n\t */\n\tstatic isEmpty(element) {\n\t\treturn element.childNodes.length === 0;\n\t}\n\n\t/**\n\t * Check if an element matches a given selector.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t */\n\tstatic match(element, selector) {\n\t\tif (!element || element.nodeType !== 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar p = Element.prototype;\n\t\tvar m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\t\tif (m) {\n\t\t\treturn m.call(element, selector);\n\t\t}\n\n\t\treturn dom.matchFallback_(element, selector);\n\t}\n\n\t/**\n\t * Check if an element matches a given selector, using an internal implementation\n\t * instead of calling existing javascript functions.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic matchFallback_(element, selector) {\n\t\tvar nodes = document.querySelectorAll(selector, element.parentNode);\n\t\tfor (var i = 0; i < nodes.length; ++i) {\n\t\t\tif (nodes[i] === element) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the next sibling of the given element that matches the specified\n\t * selector, or null if there is none.\n\t * @param {!Element} element\n\t * @param {?string} selector\n\t */\n\tstatic next(element, selector) {\n\t\tdo {\n\t\t\telement = element.nextSibling;\n\t\t\tif (element && dom.match(element, selector)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t} while (element);\n\t\treturn null;\n\t}\n\n\t/**\n\t * Normalizes the event payload for delegate listeners.\n\t * @param {!Event} event\n\t */\n\tstatic normalizeDelegateEvent_(event) {\n\t\tevent.stopPropagation = dom.stopPropagation_;\n\t\tevent.stopImmediatePropagation = dom.stopImmediatePropagation_;\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element. This function normalizes\n\t * DOM event payloads and functions so they'll work the same way on all supported\n\t * browsers.\n\t * @param {!Element|string} element The DOM element to listen to the event on, or\n\t *   a selector that should be delegated on the entire document.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @param {boolean} opt_capture Flag indicating if listener should be triggered\n\t *   during capture phase, instead of during the bubbling phase. Defaults to false.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic on(element, eventName, callback, opt_capture) {\n\t\tif (core.isString(element)) {\n\t\t\treturn dom.delegate(document, eventName, element, callback);\n\t\t}\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.event) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\t\telement.addEventListener(eventName, callback, opt_capture);\n\t\treturn new DomEventHandle(element, eventName, callback, opt_capture);\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element once. This\n\t * function normalizes DOM event payloads and functions so they'll work the\n\t * same way on all supported browsers.\n\t * @param {!Element} element The DOM element to listen to the event on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *   is triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic once(element, eventName, callback) {\n\t\tvar domEventHandle = this.on(element, eventName, function() {\n\t\t\tdomEventHandle.removeListener();\n\t\t\treturn callback.apply(this, arguments);\n\t\t});\n\t\treturn domEventHandle;\n\t}\n\n\t/**\n\t * Gets the first parent from the given element that matches the specified\n\t * selector, or null if none match.\n\t * @param {!Element} element\n\t * @param {string} selector\n\t * @return {Element}\n\t */\n\tstatic parent(element, selector) {\n\t\treturn dom.closest(element.parentNode, selector);\n\t}\n\n\t/**\n\t * Registers a custom event.\n\t * @param {string} eventName The name of the custom event.\n\t * @param {!Object} customConfig An object with information about how the event\n\t *   should be handled.\n\t */\n\tstatic registerCustomEvent(eventName, customConfig) {\n\t\tdom.customEvents[eventName] = customConfig;\n\t}\n\n\t/**\n\t * Removes all the child nodes on a DOM node.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic removeChildren(node) {\n\t\tvar child;\n\t\twhile ((child = node.firstChild)) {\n\t\t\tnode.removeChild(child);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element.\n\t * @param {!Element|!NodeList} elements The element or elements to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t */\n\tstatic removeClasses(elements, classes) {\n\t\tif (!core.isObject(elements) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!elements.length) {\n\t\t\telements = [elements];\n\t\t}\n\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\tif ('classList' in elements[i]) {\n\t\t\t\tdom.removeClassesWithNative_(elements[i], classes);\n\t\t\t} else {\n\t\t\t\tdom.removeClassesWithoutNative_(elements[i], classes);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\tif (className) {\n\t\t\t\telement.classList.remove(className);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element without using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\telementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Replaces the first element with the second.\n\t * @param {Element} element1\n\t * @param {Element} element2\n\t */\n\tstatic replace(element1, element2) {\n\t\tif (element1 && element2 && element1 !== element2 && element1.parentNode) {\n\t\t\telement1.parentNode.insertBefore(element2, element1);\n\t\t\telement1.parentNode.removeChild(element1);\n\t\t}\n\t}\n\n\t/**\n\t * The function that replaces `stopImmediatePropagation_` for events.\n\t * @protected\n\t */\n\tstatic stopImmediatePropagation_() {\n\t\tthis.stopped = true;\n\t\tthis.stoppedImmediate = true;\n\t\tEvent.prototype.stopImmediatePropagation.call(this);\n\t}\n\n\t/**\n\t * The function that replaces `stopPropagation` for events.\n\t * @protected\n\t */\n\tstatic stopPropagation_() {\n\t\tthis.stopped = true;\n\t\tEvent.prototype.stopPropagation.call(this);\n\t}\n\n\t/**\n\t * Checks if the given element supports the given event type.\n\t * @param {!Element|string} element The DOM element or element tag name to check.\n\t * @param {string} eventName The name of the event to check.\n\t * @return {boolean}\n\t */\n\tstatic supportsEvent(element, eventName) {\n\t\tif (dom.customEvents[eventName]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (core.isString(element)) {\n\t\t\tif (!elementsByTag[element]) {\n\t\t\t\telementsByTag[element] = document.createElement(element);\n\t\t\t}\n\t\t\telement = elementsByTag[element];\n\t\t}\n\t\treturn 'on' + eventName in element;\n\t}\n\n\t/**\n\t * Converts the given argument to a DOM element. Strings are assumed to\n\t * be selectors, and so a matched element will be returned. If the arg\n\t * is already a DOM element it will be the return value.\n\t * @param {string|Element|Document} selectorOrElement\n\t * @return {Element} The converted element, or null if none was found.\n\t */\n\tstatic toElement(selectorOrElement) {\n\t\tif (core.isElement(selectorOrElement) || core.isDocument(selectorOrElement)) {\n\t\t\treturn selectorOrElement;\n\t\t} else if (core.isString(selectorOrElement)) {\n\t\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t\t} else {\n\t\t\t\treturn document.querySelector(selectorOrElement);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element. If any of the classes\n\t * is present, it will be removed from the element, or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.toggleClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.toggleClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\telement.classList.toggle(className);\n\t\t});\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element without using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = ' ' + classes[i] + ' ';\n\t\t\tvar classIndex = elementClassName.indexOf(className);\n\n\t\t\tif (classIndex === -1) {\n\t\t\t\telementClassName = elementClassName + classes[i] + ' ';\n\t\t\t} else {\n\t\t\t\telementClassName = elementClassName.substring(0, classIndex) + ' ' +\n\t\t\t\t\telementClassName.substring(classIndex + className.length);\n\t\t\t}\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Triggers the specified event on the given element.\n\t * NOTE: This should mostly be used for testing, not on real code.\n\t * @param {!Element} element The node that should trigger the event.\n\t * @param {string} eventName The name of the event to be triggred.\n\t * @param {Object=} opt_eventObj An object with data that should be on the\n\t *   triggered event's payload.\n\t */\n\tstatic triggerEvent(element, eventName, opt_eventObj) {\n\t\tif (dom.isAbleToInteractWith_(element, eventName)) {\n\t\t\tvar eventObj = document.createEvent('HTMLEvents');\n\t\t\teventObj.initEvent(eventName, true, true);\n\t\t\tobject.mixin(eventObj, opt_eventObj);\n\t\t\telement.dispatchEvent(eventObj);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers the given listeners array.\n\t * @param {Array<!function()>} listeners\n\t * @param {!Event} event\n\t * @param {!Element} element\n\t * @param {!Array} defaultFns Array to collect default listeners in, instead\n\t *     of running them.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic triggerListeners_(listeners, event, element, defaultFns) {\n\t\tvar ret = true;\n\t\tlisteners = listeners || [];\n\t\tfor (var i = 0; i < listeners.length && !event.stoppedImmediate; i++) {\n\t\t\tif (listeners[i].defaultListener_) {\n\t\t\t\tdefaultFns.push({\n\t\t\t\t\telement,\n\t\t\t\t\tfn: listeners[i]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tret &= listeners[i](event);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Triggers all listeners for the given event type that are stored in the\n\t * specified element.\n\t * @param {!Element} container\n\t * @param {!Element} element\n\t * @param {!Event} event\n\t * @param {!Array} defaultFns Array to collect default listeners in, instead\n\t *     of running them.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic triggerMatchedListeners_(container, element, event, defaultFns) {\n\t\tif (event.type === 'click' && event.button === 2) {\n\t\t\t// Firefox triggers \"click\" events on the document for right clicks. This\n\t\t\t// causes our delegate logic to trigger it for regular elements too, which\n\t\t\t// shouldn't happen. Ignoring them here.\n\t\t\treturn;\n\t\t}\n\n\t\tvar data = domData.get(element);\n\t\tvar listeners = data.listeners[event.type];\n\t\tvar ret = dom.triggerListeners_(listeners, event, element, defaultFns);\n\n\t\tvar selectorsMap = domData.get(container).delegating[event.type].selectors;\n\t\tvar selectors = Object.keys(selectorsMap);\n\t\tfor (var i = 0; i < selectors.length && !event.stoppedImmediate; i++) {\n\t\t\tif (dom.match(element, selectors[i])) {\n\t\t\t\tlisteners = selectorsMap[selectors[i]];\n\t\t\t\tret &= dom.triggerListeners_(listeners, event, element, defaultFns);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n}\n\nvar elementsByTag = {};\ndom.customEvents = {};\n\nexport default dom;\n"],"sourceRoot":"/source/"}