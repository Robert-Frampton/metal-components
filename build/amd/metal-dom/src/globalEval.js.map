{"version":3,"sources":["globalEval.js"],"names":["globalEval","run","text","opt_appendFn","script","document","createElement","head","appendChild","exitDocument","runFile","src","opt_callback","callback","once","runScript","type","nextTick","runScriptsInElement","element","scripts","querySelectorAll","length","runScriptsInOrder","index","item"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;KAQMA,U;;;;;aAQEC,G,gBAAIC,I,EAAMC,Y,EAAc;AAC9B,OAAIC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAb;AACAF,UAAOF,IAAP,GAAcA,IAAd;AACA,OAAIC,YAAJ,EAAkB;AACjBA,iBAAaC,MAAb;AACA,IAFD,MAEO;AACNC,aAASE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACA;AACD,iBAAIK,YAAJ,CAAiBL,MAAjB;AACA,UAAOA,MAAP;AACA,G;;aAWMM,O,oBAAQC,G,EAAKC,Y,EAAcT,Y,EAAc;AAC/C,OAAIC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAb;AACAF,UAAOO,GAAP,GAAaA,GAAb;;AAEA,OAAIE,WAAW,SAAXA,QAAW,GAAW;AACzB,kBAAIJ,YAAJ,CAAiBL,MAAjB;AACAQ,oBAAgBA,cAAhB;AACA,IAHD;AAIA,iBAAIE,IAAJ,CAASV,MAAT,EAAiB,MAAjB,EAAyBS,QAAzB;AACA,iBAAIC,IAAJ,CAASV,MAAT,EAAiB,OAAjB,EAA0BS,QAA1B;;AAEA,OAAIV,YAAJ,EAAkB;AACjBA,iBAAaC,MAAb;AACA,IAFD,MAEO;AACNC,aAASE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACA;;AAED,UAAOA,MAAP;AACA,G;;aAWMW,S,sBAAUX,M,EAAQQ,Y,EAAcT,Y,EAAc;AACpD,OAAIU,WAAW,SAAXA,QAAW,GAAW;AACzBD,oBAAgBA,cAAhB;AACA,IAFD;AAGA,OAAIR,OAAOY,IAAP,IAAeZ,OAAOY,IAAP,KAAgB,iBAAnC,EAAsD;AACrD,iBAAMC,QAAN,CAAeJ,QAAf;AACA;AACA;AACD,iBAAIJ,YAAJ,CAAiBL,MAAjB;AACA,OAAIA,OAAOO,GAAX,EAAgB;AACf,WAAOX,WAAWU,OAAX,CAAmBN,OAAOO,GAA1B,EAA+BC,YAA/B,EAA6CT,YAA7C,CAAP;AACA,IAFD,MAEO;AACN,iBAAMc,QAAN,CAAeJ,QAAf;AACA,WAAOb,WAAWC,GAAX,CAAeG,OAAOF,IAAtB,EAA4BC,YAA5B,CAAP;AACA;AACD,G;;aAUMe,mB,gCAAoBC,O,EAASP,Y,EAAcT,Y,EAAc;AAC/D,OAAIiB,UAAUD,QAAQE,gBAAR,CAAyB,QAAzB,CAAd;AACA,OAAID,QAAQE,MAAZ,EAAoB;AACnBtB,eAAWuB,iBAAX,CAA6BH,OAA7B,EAAsC,CAAtC,EAAyCR,YAAzC,EAAuDT,YAAvD;AACA,IAFD,MAEO,IAAIS,YAAJ,EAAkB;AACxB,iBAAMK,QAAN,CAAeL,YAAf;AACA;AACD,G;;aAWMW,iB,8BAAkBH,O,EAASI,K,EAAOZ,Y,EAAcT,Y,EAAc;AACpEH,cAAWe,SAAX,CAAqBK,QAAQK,IAAR,CAAaD,KAAb,CAArB,EAA0C,YAAW;AACpD,QAAIA,QAAQJ,QAAQE,MAAR,GAAiB,CAA7B,EAAgC;AAC/BtB,gBAAWuB,iBAAX,CAA6BH,OAA7B,EAAsCI,QAAQ,CAA9C,EAAiDZ,YAAjD,EAA+DT,YAA/D;AACA,KAFD,MAEO,IAAIS,YAAJ,EAAkB;AACxB,kBAAMK,QAAN,CAAeL,YAAf;AACA;AACD,IAND,EAMGT,YANH;AAOA,G;;;;;mBAGaH,U","file":"node_modules/metal-dom/src/globalEval.js","sourcesContent":["'use strict';\n\nimport { async } from 'metal';\nimport dom from './dom';\n\n/**\n * Utility functions for running javascript code in the global scope.\n */\nclass globalEval {\n\t/**\n\t * Evaluates the given string in the global scope.\n\t * @param {string} text\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic run(text, opt_appendFn) {\n\t\tvar script = document.createElement('script');\n\t\tscript.text = text;\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(script);\n\t\t} else {\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\t\tdom.exitDocument(script);\n\t\treturn script;\n\t}\n\n\t/**\n\t * Evaluates the given javascript file in the global scope.\n\t * @param {string} src The file's path.\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic runFile(src, opt_callback, opt_appendFn) {\n\t\tvar script = document.createElement('script');\n\t\tscript.src = src;\n\n\t\tvar callback = function() {\n\t\t\tdom.exitDocument(script);\n\t\t\topt_callback && opt_callback();\n\t\t};\n\t\tdom.once(script, 'load', callback);\n\t\tdom.once(script, 'error', callback);\n\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(script);\n\t\t} else {\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\n\t\treturn script;\n\t}\n\n\t/**\n\t * Evaluates the code referenced by the given script element.\n\t * @param {!Element} script\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic runScript(script, opt_callback, opt_appendFn) {\n\t\tvar callback = function() {\n\t\t\topt_callback && opt_callback();\n\t\t};\n\t\tif (script.type && script.type !== 'text/javascript') {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn;\n\t\t}\n\t\tdom.exitDocument(script);\n\t\tif (script.src) {\n\t\t\treturn globalEval.runFile(script.src, opt_callback, opt_appendFn);\n\t\t} else {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn globalEval.run(script.text, opt_appendFn);\n\t\t}\n\t}\n\n\t/**\n\t * Evaluates any script tags present in the given element.\n\t * @param {!Element} element\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runScriptsInElement(element, opt_callback, opt_appendFn) {\n\t\tvar scripts = element.querySelectorAll('script');\n\t\tif (scripts.length) {\n\t\t\tglobalEval.runScriptsInOrder(scripts, 0, opt_callback, opt_appendFn);\n\t\t} else if (opt_callback) {\n\t\t\tasync.nextTick(opt_callback);\n\t\t}\n\t}\n\n\t/**\n\t * Runs the given scripts elements in the order that they appear.\n\t * @param {!NodeList} scripts\n\t * @param {number} index\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runScriptsInOrder(scripts, index, opt_callback, opt_appendFn) {\n\t\tglobalEval.runScript(scripts.item(index), function() {\n\t\t\tif (index < scripts.length - 1) {\n\t\t\t\tglobalEval.runScriptsInOrder(scripts, index + 1, opt_callback, opt_appendFn);\n\t\t\t} else if (opt_callback) {\n\t\t\t\tasync.nextTick(opt_callback);\n\t\t\t}\n\t\t}, opt_appendFn);\n\t}\n}\n\nexport default globalEval;\n"],"sourceRoot":"/source/"}