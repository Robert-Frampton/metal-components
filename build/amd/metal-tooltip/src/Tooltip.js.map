{"version":3,"sources":["Tooltip.js"],"names":["Tooltip","visible","element","style","display","once","hideCompletely_","bind","opacity","register","Align","TooltipBase"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAUMA,O;;;;;;;;;;;qCAMa;AACjB,QAAI,CAAC,KAAKC,OAAV,EAAmB;AAClB,UAAKC,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACA;AACD;;;+BAOWH,O,EAAS;AACpB,QAAI,CAACA,OAAL,EAAc;AACb,mBAAII,IAAJ,CAAS,KAAKH,OAAd,EAAuB,cAAvB,EAAuC,KAAKI,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvC;AACA,mBAAIF,IAAJ,CAAS,KAAKH,OAAd,EAAuB,eAAvB,EAAwC,KAAKI,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAxC;AACA,KAHD,MAGO;AACN,UAAKL,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,GAA6B,EAA7B;AACA;;AAED,SAAKF,OAAL,CAAaC,KAAb,CAAmBK,OAAnB,GAA6BP,UAAU,CAAV,GAAc,EAA3C;AACA,kHAAkBA,OAAlB;AACA;;;;;;AAEF,eAAIQ,QAAJ,CAAaT,OAAb;;AAEA;;;;;AAKAA,SAAQU,KAAR,GAAgB,sBAAYA,KAA5B;;mBAEeV,O;SACNA,O,GAAAA,O;SAASW,W","file":"node_modules/metal-tooltip/src/Tooltip.js","sourcesContent":["'use strict';\n\nimport dom from 'metal-dom';\nimport Soy from 'metal-soy';\nimport TooltipBase from './TooltipBase';\nimport templates from './Tooltip.soy.js';\n\n/**\n * Tooltip component.\n */\nclass Tooltip extends TooltipBase {\n\t/**\n\t * Hides the alert completely (with display \"none\"). This is called after the\n\t * hiding animation is done.\n\t * @protected\n\t */\n\thideCompletely_() {\n\t\tif (!this.visible) {\n\t\t\tthis.element.style.display = 'none';\n\t\t}\n\t}\n\n\t/**\n\t * State synchronization logic for `visible`. Updates the element's opacity,\n\t * since bootstrap uses opacity instead of display for tooltip visibility.\n\t * @param {boolean} visible\n\t */\n\tsyncVisible(visible) {\n\t\tif (!visible) {\n\t\t\tdom.once(this.element, 'animationend', this.hideCompletely_.bind(this));\n\t\t\tdom.once(this.element, 'transitionend', this.hideCompletely_.bind(this));\n\t\t} else {\n\t\t\tthis.element.style.display = '';\n\t\t}\n\n\t\tthis.element.style.opacity = visible ? 1 : '';\n\t\tsuper.syncVisible(visible);\n\t}\n}\nSoy.register(Tooltip, templates);\n\n/**\n * @inheritDoc\n * @see `Align` class.\n * @static\n */\nTooltip.Align = TooltipBase.Align;\n\nexport default Tooltip;\nexport { Tooltip, TooltipBase };\n"],"sourceRoot":"/source/"}