{"version":3,"sources":["Soy.js"],"names":["ijData","Soy","addMissingStateKeys_","elementTemplate","component_","constructor","TEMPLATE","isFunction","getOriginalFn","soyParamTypes_","types","keys","params","component","state","getDataManager","getStateInstance","i","length","hasStateKey","addToState","getInitialConfig","buildTemplateData_","data","mixin","config_","getStateKeys","forEach","value","key","isHtmlParam_","toIncDom","bind","getTemplate","namespace","templateName","opt_data","opt_ignored","opt_ijData","goog","loadedModules_","Error","handleDataManagerCreated_","handleInterceptedCall_","originalFn","args","componentCtor","push","IncrementalDOM","elementVoid","apply","name","getStateKeyConfig","isHtml","type","split","indexOf","register","templates","mainTemplate","RENDERER","registerForInterception","renderIncDom","render","startInterception","stopInterception","setInjectedData","shouldUpdate","should","fn","changes_","toHtmlString","incDomFn","element","document","createElement","patch","innerHTML","isObject","isString","content","contentKind","buildFn","SoyAop"],"mappings":"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","file":"node_modules/metal-soy/src/Soy.js","sourcesContent":["'use strict';\n\nimport 'metal-soy-bundle';\nimport { core, object } from 'metal';\nimport { ComponentRegistry } from 'metal-component';\nimport HTML2IncDom from 'html2incdom';\nimport IncrementalDomRenderer from 'metal-incremental-dom';\nimport SoyAop from './SoyAop';\n\n// The injected data that will be passed to soy templates.\nvar ijData = {};\n\nclass Soy extends IncrementalDomRenderer {\n\t/**\n\t * Adds the template params to the component's state, if they don't exist yet.\n\t * @protected\n\t */\n\taddMissingStateKeys_() {\n\t\tvar elementTemplate = this.component_.constructor.TEMPLATE;\n\t\tif (!core.isFunction(elementTemplate)) {\n\t\t\treturn;\n\t\t}\n\n\t\telementTemplate = SoyAop.getOriginalFn(elementTemplate);\n\t\tthis.soyParamTypes_ = elementTemplate.types || {};\n\n\t\tvar keys = elementTemplate.params || [];\n\t\tvar component = this.component_;\n\t\tvar state = component.getDataManager().getStateInstance();\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tif (!state.hasStateKey(keys[i]) && !component[keys[i]]) {\n\t\t\t\tstate.addToState(keys[i], {}, component.getInitialConfig()[keys[i]]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Copies the component's state to an object so it can be passed as it's\n\t * template call's data. The copying needs to be done because, if the component\n\t * itself is passed directly, some problems occur when soy tries to merge it\n\t * with other data, due to property getters and setters. This is safer.\n\t * @param {!Array<string>} params The params used by this template.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tbuildTemplateData_(params) {\n\t\tvar component = this.component_;\n\t\tvar data = object.mixin({}, this.config_);\n\t\tcomponent.getStateKeys().forEach(key => {\n\t\t\tvar value = component[key];\n\t\t\tif (this.isHtmlParam_(key)) {\n\t\t\t\tvalue = Soy.toIncDom(value);\n\t\t\t}\n\t\t\tdata[key] = value;\n\t\t});\n\t\tfor (var i = 0; i < params.length; i++) {\n\t\t\tif (!data[params[i]] && core.isFunction(component[params[i]])) {\n\t\t\t\tdata[params[i]] = component[params[i]].bind(component);\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\n\t/**\n\t * Returns the requested template function. This function will be wrapped in\n\t * another though, just to defer the requirement of the template's module\n\t * being ready until the function is actually called.\n\t * @param {string} namespace The soy template's namespace.\n\t * @param {string} templateName The name of the template function.\n\t * @return {!function()}\n\t */\n\tstatic getTemplate(namespace, templateName) {\n\t\treturn function(opt_data, opt_ignored, opt_ijData) {\n\t\t\tif (!goog.loadedModules_[namespace]) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'No template with namespace \"' + namespace + '\" has been loaded yet.'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn goog.loadedModules_[namespace][templateName](opt_data, opt_ignored, opt_ijData);\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\thandleDataManagerCreated_() {\n\t\tsuper.handleDataManagerCreated_();\n\t\tthis.addMissingStateKeys_();\n\t}\n\n\t/**\n\t * Handles an intercepted soy template call. If the call is for a component's\n\t * main template, then it will be replaced with a call that incremental dom\n\t * can use for both handling an instance of that component and rendering it.\n\t * @param {!function()} originalFn The original template function that was\n\t *     intercepted.\n\t * @param {Object} data The data the template was called with.\n\t * @protected\n\t */\n\tstatic handleInterceptedCall_(originalFn, opt_data = {}) {\n\t\tvar args = [originalFn.componentCtor, null, []];\n\t\tfor (var key in opt_data) {\n\t\t\targs.push(key, opt_data[key]);\n\t\t}\n\t\tIncrementalDOM.elementVoid.apply(null, args);\n\t}\n\n\t/**\n\t * Checks if the given param type is html.\n\t * @param {string} name\n\t * @protected\n\t */\n\tisHtmlParam_(name) {\n\t\tvar state = this.component_.getDataManager().getStateInstance();\n\t\tif (state.getStateKeyConfig(name).isHtml) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = this.soyParamTypes_[name] || '';\n\t\treturn type.split('|').indexOf('html') !== -1;\n\t}\n\n\t/**\n\t * Registers the given templates to be used by `Soy` for the specified\n\t * component constructor.\n\t * @param {!Function} componentCtor The constructor of the component that\n\t *     should use the given templates.\n\t * @param {!Object} templates Object containing soy template functions.\n\t * @param {string=} mainTemplate The name of the main template that should be\n\t *     used to render the component. Defaults to \"render\".\n\t */\n\tstatic register(componentCtor, templates, mainTemplate = 'render') {\n\t\tcomponentCtor.RENDERER = Soy;\n\t\tcomponentCtor.TEMPLATE = SoyAop.getOriginalFn(templates[mainTemplate]);\n\t\tcomponentCtor.TEMPLATE.componentCtor = componentCtor;\n\t\tSoyAop.registerForInterception(templates, mainTemplate);\n\t\tComponentRegistry.register(componentCtor);\n\t}\n\n\t/**\n\t * Overrides the default method from `IncrementalDomRenderer` so the component's\n\t * soy template can be used for rendering.\n\t * @param {!Object} data Data passed to the component when rendering it.\n\t * @override\n\t */\n\trenderIncDom() {\n\t\tvar elementTemplate = this.component_.constructor.TEMPLATE;\n\t\tif (core.isFunction(elementTemplate) && !this.component_.render) {\n\t\t\telementTemplate = SoyAop.getOriginalFn(elementTemplate);\n\t\t\tSoyAop.startInterception(Soy.handleInterceptedCall_);\n\t\t\telementTemplate(this.buildTemplateData_(elementTemplate.params || []), null, ijData);\n\t\t\tSoyAop.stopInterception();\n\t\t} else {\n\t\t\tsuper.renderIncDom();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the injected data object that should be passed to templates.\n\t * @param {Object} data\n\t */\n\tstatic setInjectedData(data) {\n\t\tijData = data || {};\n\t}\n\n\t/**\n\t * Overrides the original `IncrementalDomRenderer` method so that only\n\t * state keys used by the main template can cause updates.\n\t * @return {boolean}\n\t */\n\tshouldUpdate() {\n\t\tvar should = super.shouldUpdate();\n\t\tif (!should || this.component_.shouldUpdate) {\n\t\t\treturn should;\n\t\t}\n\n\t\tvar fn = this.component_.constructor.TEMPLATE;\n\t\tvar params = fn ? SoyAop.getOriginalFn(fn).params : [];\n\t\tfor (var i = 0; i < params.length; i++) {\n\t\t\tif (this.changes_[params[i]]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Converts the given incremental dom function into an html string.\n\t * @param {!function()} incDomFn\n\t * @return {string}\n\t */\n\tstatic toHtmlString(incDomFn) {\n\t\tvar element = document.createElement('div');\n\t\tIncrementalDOM.patch(element, incDomFn);\n\t\treturn element.innerHTML;\n\t}\n\n\t/**\n\t * Converts the given html string into an incremental dom function.\n\t * @param {string|{contentKind: string, content: string}} value\n\t * @return {!function()}\n\t */\n\tstatic toIncDom(value) {\n\t\tif (core.isObject(value) && core.isString(value.content) && (value.contentKind === 'HTML')) {\n\t\t\tvalue = value.content;\n\t\t}\n\t\tif (core.isString(value)) {\n\t\t\tvalue = HTML2IncDom.buildFn(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport default Soy;\nexport { Soy, SoyAop };\n"],"sourceRoot":"/source/"}