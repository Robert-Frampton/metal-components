{"version":3,"sources":["ListItem.js"],"names":["ListItem","item","textPrimary","isString","toIncDom","textSecondary","avatar","content","Array","isArray","iconsHtml","map","register","STATE","validator","isObject","setter","index","value"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAUMA,Q;;;;;;;;;;;iCAMSC,I,EAAM;AACnB,QAAIA,KAAKC,WAAL,IAAoB,gBAAKC,QAAL,CAAcF,KAAKC,WAAnB,CAAxB,EAAyD;AACxDD,UAAKC,WAAL,GAAmB,cAAIE,QAAJ,CAAaH,KAAKC,WAAlB,CAAnB;AACA;AACD,QAAID,KAAKI,aAAL,IAAsB,gBAAKF,QAAL,CAAcF,KAAKI,aAAnB,CAA1B,EAA6D;AAC5DJ,UAAKI,aAAL,GAAqB,cAAID,QAAJ,CAAaH,KAAKI,aAAlB,CAArB;AACA;AACD,QAAIJ,KAAKK,MAAL,IAAeL,KAAKK,MAAL,CAAYC,OAA3B,IAAsC,gBAAKJ,QAAL,CAAcF,KAAKK,MAAL,CAAYC,OAA1B,CAA1C,EAA8E;AAC7EN,UAAKK,MAAL,CAAYC,OAAZ,GAAsB,cAAIH,QAAJ,CAAaH,KAAKK,MAAL,CAAYC,OAAzB,CAAtB;AACA;AACD,QAAIC,MAAMC,OAAN,CAAcR,KAAKS,SAAnB,CAAJ,EAAmC;AAClCT,UAAKS,SAAL,GAAiBT,KAAKS,SAAL,CAAeC,GAAf,CAAmB,cAAIP,QAAvB,CAAjB;AACA;AACD,WAAOH,IAAP;AACA;;;;;;AAEF,eAAIW,QAAJ,CAAaZ,QAAb;;AAEA;;;;;AAKAA,UAASa,KAAT,GAAiB;AAChB;;;;AAIAZ,QAAM;AACLa,cAAW,gBAAKC,QADX;AAELC,WAAQ;AAFH,GALU;;AAUhB;;;;AAIAC,SAAO;AACNC,UAAO,CAAC;AADF;AAdS,EAAjB;;mBAmBelB,Q;AACoD,yBAAcY,QAAd,CAAuB,UAAvB,EAAmCZ,QAAnC","file":"node_modules/metal-list/src/ListItem.js","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\nimport templates from './ListItem.soy.js';\n\n/**\n * List component.\n */\nclass ListItem extends Component {\n\t/**\n\t * Setter function for the `item` state key.\n\t * @param {!Object} item\n\t * @protected\n\t */\n\tsetterItemFn_(item) {\n\t\tif (item.textPrimary && core.isString(item.textPrimary)) {\n\t\t\titem.textPrimary = Soy.toIncDom(item.textPrimary);\n\t\t}\n\t\tif (item.textSecondary && core.isString(item.textSecondary)) {\n\t\t\titem.textSecondary = Soy.toIncDom(item.textSecondary);\n\t\t}\n\t\tif (item.avatar && item.avatar.content && core.isString(item.avatar.content)) {\n\t\t\titem.avatar.content = Soy.toIncDom(item.avatar.content);\n\t\t}\n\t\tif (Array.isArray(item.iconsHtml)) {\n\t\t\titem.iconsHtml = item.iconsHtml.map(Soy.toIncDom);\n\t\t}\n\t\treturn item;\n\t}\n}\nSoy.register(ListItem, templates);\n\n/**\n * List state definition.\n * @type {Object}\n * @static\n */\nListItem.STATE = {\n\t/**\n\t * The item to be rendered.\n\t * @type {!Object}\n\t */\n\titem: {\n\t\tvalidator: core.isObject,\n\t\tsetter: 'setterItemFn_'\n\t},\n\n\t/**\n\t * The index of the item in the list.\n\t * @type {number}\n\t */\n\tindex: {\n\t\tvalue: -1\n\t}\n};\n\nexport default ListItem;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('listItem', ListItem);"],"sourceRoot":"/source/"}