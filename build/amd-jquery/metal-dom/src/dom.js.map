{"version":3,"sources":["dom.js"],"names":["NEXT_TARGET","USE_CAPTURE","blur","error","focus","invalid","load","scroll","dom","addClasses","elements","classes","isObject","isString","length","i","addClassesWithNative_","addClassesWithoutNative_","element","split","forEach","className","classList","add","elementClassName","classesToAppend","indexOf","addElementListener_","eventName","listener","data","get","addToArr_","listeners","addSelectorListener_","selector","delegating","selectors","arr","key","value","push","attachDelegateEvent_","handle","on","handleDelegateEvent_","closest","match","parentNode","append","parent","child","buildFragment","NodeList","childArr","Array","prototype","slice","call","appendChild","htmlString","tempDiv","document","createElement","innerHTML","removeChild","firstChild","fragment","createDocumentFragment","contains","element1","element2","isDocument","documentElement","delegate","selectorOrTarget","callback","opt_default","customConfig","customEvents","originalEvent","handler","bind","defaultListener_","isAbleToInteractWith_","node","currElement","isAble","matchesSelector","disabled","enterDocument","body","exitDocument","event","normalizeDelegateEvent_","isDef","target","ret","container","currentTarget","limit","defFns","stopped","delegateTarget","triggerMatchedListeners_","defaultPrevented","fn","hasClass","hasClassWithNative_","hasClassWithoutNative_","isEmpty","childNodes","nodeType","p","Element","m","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","matchFallback_","nodes","querySelectorAll","next","nextSibling","stopPropagation","stopPropagation_","stopImmediatePropagation","stopImmediatePropagation_","opt_capture","addEventListener","once","domEventHandle","removeListener","apply","arguments","registerCustomEvent","removeChildren","removeClasses","removeClassesWithNative_","removeClassesWithoutNative_","remove","replace","trim","insertBefore","stoppedImmediate","Event","supportsEvent","elementsByTag","toElement","selectorOrElement","isElement","getElementById","substr","querySelector","toggleClasses","toggleClassesWithNative_","toggleClassesWithoutNative_","toggle","classIndex","substring","triggerEvent","opt_eventObj","eventObj","createEvent","initEvent","mixin","dispatchEvent","triggerListeners_","defaultFns","type","button","selectorsMap","Object","keys"],"mappings":"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","file":"node_modules/metal-dom/src/dom.js","sourcesContent":["'use strict';\n\nimport { core, object } from 'metal';\nimport domData from './domData';\nimport DomDelegatedEventHandle from './DomDelegatedEventHandle';\nimport DomEventHandle from './DomEventHandle';\n\nconst NEXT_TARGET = '__metal_next_target__';\nconst USE_CAPTURE = {\n\tblur: true,\n\terror: true,\n\tfocus: true,\n\tinvalid: true,\n\tload: true,\n\tscroll: true\n};\n\nclass dom {\n\t/**\n\t * Adds the requested CSS classes to an element.\n\t * @param {!Element|!Nodelist} elements The element or elements to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t */\n\tstatic addClasses(elements, classes) {\n\t\tif (!core.isObject(elements) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!elements.length) {\n\t\t\telements = [elements];\n\t\t}\n\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\tif ('classList' in elements[i]) {\n\t\t\t\tdom.addClassesWithNative_(elements[i], classes);\n\t\t\t} else {\n\t\t\t\tdom.addClassesWithoutNative_(elements[i], classes);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\tif (className) {\n\t\t\t\telement.classList.add(className);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element without using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\t\tvar classesToAppend = '';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = classes[i];\n\n\t\t\tif (elementClassName.indexOf(' ' + className + ' ') === -1) {\n\t\t\t\tclassesToAppend += ' ' + className;\n\t\t\t}\n\t\t}\n\n\t\tif (classesToAppend) {\n\t\t\telement.className = element.className + classesToAppend;\n\t\t}\n\t}\n\n\t/**\n\t * Adds an event listener to the given element, to be triggered via delegate.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @param {!function()} listener\n\t * @protected\n\t */\n\tstatic addElementListener_(element, eventName, listener) {\n\t\tvar data = domData.get(element);\n\t\tdom.addToArr_(data.listeners, eventName, listener);\n\t}\n\n\t/**\n\t * Adds an event listener to the given element, to be triggered via delegate\n\t * selectors.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {!function()} listener\n\t * @protected\n\t */\n\tstatic addSelectorListener_(element, eventName, selector, listener) {\n\t\tvar data = domData.get(element);\n\t\tdom.addToArr_(data.delegating[eventName].selectors, selector, listener);\n\t}\n\n\t/**\n\t * Adds a value to an array inside an object, creating it first if it doesn't\n\t * yet exist.\n\t * @param {!Array} arr\n\t * @param {string} key\n\t * @param {*} value\n\t * @protected\n\t */\n\tstatic addToArr_(arr, key, value) {\n\t\tif (!arr[key]) {\n\t\t\tarr[key] = [];\n\t\t}\n\t\tarr[key].push(value);\n\t}\n\n\t/**\n\t * Attaches a delegate listener, unless there's already one attached.\n\t * @param {!Element} element\n\t * @param {string} eventName\n\t * @protected\n\t */\n\tstatic attachDelegateEvent_(element, eventName) {\n\t\tvar data = domData.get(element);\n\t\tif (!data.delegating[eventName]) {\n\t\t\tdata.delegating[eventName] = {\n\t\t\t\thandle: dom.on(\n\t\t\t\t\telement,\n\t\t\t\t\teventName,\n\t\t\t\t\tdom.handleDelegateEvent_,\n\t\t\t\t\t!!USE_CAPTURE[eventName]\n\t\t\t\t),\n\t\t\t\tselectors: {}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Gets the closest element up the tree from the given element (including\n\t * itself) that matches the specified selector, or null if none match.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {Element}\n\t */\n\tstatic closest(element, selector) {\n\t\twhile (element && !dom.match(element, selector)) {\n\t\t\telement = element.parentNode;\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Appends a child node with text or other nodes to a parent node. If\n\t * child is a HTML string it will be automatically converted to a document\n\t * fragment before appending it to the parent.\n\t * @param {!Element} parent The node to append nodes to.\n\t * @param {!(Element|NodeList|string)} child The thing to append to the parent.\n\t * @return {!Element} The appended child.\n\t */\n\tstatic append(parent, child) {\n\t\tif (core.isString(child)) {\n\t\t\tchild = dom.buildFragment(child);\n\t\t}\n\t\tif (child instanceof NodeList) {\n\t\t\tvar childArr = Array.prototype.slice.call(child);\n\t\t\tfor (var i = 0; i < childArr.length; i++) {\n\t\t\t\tparent.appendChild(childArr[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tparent.appendChild(child);\n\t\t}\n\t\treturn child;\n\t}\n\n\t/**\n\t * Helper for converting a HTML string into a document fragment.\n\t * @param {string} htmlString The HTML string to convert.\n\t * @return {!Element} The resulting document fragment.\n\t */\n\tstatic buildFragment(htmlString) {\n\t\tvar tempDiv = document.createElement('div');\n\t\ttempDiv.innerHTML = '<br>' + htmlString;\n\t\ttempDiv.removeChild(tempDiv.firstChild);\n\n\t\tvar fragment = document.createDocumentFragment();\n\t\twhile (tempDiv.firstChild) {\n\t\t\tfragment.appendChild(tempDiv.firstChild);\n\t\t}\n\t\treturn fragment;\n\t}\n\n\t/**\n\t * Checks if the first element contains the second one.\n\t * @param {!Element} element1\n\t * @param {!Element} element2\n\t * @return {boolean}\n\t */\n\tstatic contains(element1, element2) {\n\t\tif (core.isDocument(element1)) {\n\t\t\t// document.contains is not defined on IE9, so call it on documentElement instead.\n\t\t\treturn element1.documentElement.contains(element2);\n\t\t} else {\n\t\t\treturn element1.contains(element2);\n\t\t}\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element, but only calls the\n\t * given callback listener when it's triggered by elements that match the\n\t * given selector or target element.\n\t * @param {!Element} element The DOM element the event should be listened on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!Element|string} selectorOrTarget Either an element or css selector\n\t *     that should match the event for the listener to be triggered.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *     is triggered. It will receive the normalized event object.\n\t * @param {boolean=} opt_default Optional flag indicating if this is a default\n\t *     listener. That means that it would only be executed after all non\n\t *     default listeners, and only if the event isn't prevented via\n\t *     `preventDefault`.\n\t * @return {!EventHandle} Can be used to remove the listener.\n\t */\n\tstatic delegate(element, eventName, selectorOrTarget, callback, opt_default) {\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.delegate) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\n\t\tif (opt_default) {\n\t\t\t// Wrap callback so we don't set property directly on it.\n\t\t\tcallback = callback.bind();\n\t\t\tcallback.defaultListener_ = true;\n\t\t}\n\n\t\tdom.attachDelegateEvent_(element, eventName);\n\t\tif (core.isString(selectorOrTarget)) {\n\t\t\tdom.addSelectorListener_(element, eventName, selectorOrTarget, callback);\n\t\t} else {\n\t\t\tdom.addElementListener_(selectorOrTarget, eventName, callback);\n\t\t}\n\n\t\treturn new DomDelegatedEventHandle(\n\t\t\tcore.isString(selectorOrTarget) ? element : selectorOrTarget,\n\t\t\teventName,\n\t\t\tcallback,\n\t\t\tcore.isString(selectorOrTarget) ? selectorOrTarget : null\n\t\t);\n\t}\n\n\t/**\n\t * Verifies if the element is able to trigger the Click event,\n\t * simulating browsers behaviour, avoiding event listeners to be called by dom.triggerEvent method.\n\t * @param {Element} node Element to be checked.\n\t * @param {string} eventName The event name.\n\t */\n\tstatic isAbleToInteractWith_(node, eventName) {\n\t\tvar currElement = node;\n\t\tvar isAble = true;\n\t\tvar matchesSelector = 'button, input, select, textarea, fieldset';\n\n\t\tif (eventName === 'click') {\n\t\t\twhile (currElement) {\n\t\t\t\tif (currElement.disabled && dom.match(currElement, matchesSelector)) {\n\t\t\t\t\tisAble = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcurrElement = currElement.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn isAble;\n\t}\n\n\t/**\n\t * Inserts node in document as last element.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic enterDocument(node) {\n\t\tnode && dom.append(document.body, node);\n\t}\n\n\t/**\n\t * Removes node from document.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic exitDocument(node) {\n\t\tif (node && node.parentNode) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t}\n\n\t/**\n\t * This is called when an event is triggered by a delegate listener. All\n\t * matching listeners of this event type from `target` to `currentTarget` will\n\t * be triggered.\n\t * @param {!Event} event The event payload.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic handleDelegateEvent_(event) {\n\t\tdom.normalizeDelegateEvent_(event);\n\t\tvar currElement = core.isDef(event[NEXT_TARGET]) ?\n\t\t\tevent[NEXT_TARGET] :\n\t\t\tevent.target;\n\t\tvar ret = true;\n\t\tvar container = event.currentTarget;\n\t\tvar limit = event.currentTarget.parentNode;\n\t\tvar defFns = [];\n\n\t\twhile (currElement && currElement !== limit && !event.stopped) {\n\t\t\tevent.delegateTarget = currElement;\n\t\t\tret &= dom.triggerMatchedListeners_(container, currElement, event, defFns);\n\t\t\tcurrElement = currElement.parentNode;\n\t\t}\n\n\t\tfor (var i = 0; i < defFns.length && !event.defaultPrevented; i++) {\n\t\t\tevent.delegateTarget = defFns[i].element;\n\t\t\tret &= defFns[i].fn(event);\n\t\t}\n\n\t\tevent.delegateTarget = null;\n\t\tevent[NEXT_TARGET] = limit;\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t */\n\tstatic hasClass(element, className) {\n\t\tif ('classList' in element) {\n\t\t\treturn dom.hasClassWithNative_(element, className);\n\t\t} else {\n\t\t\treturn dom.hasClassWithoutNative_(element, className);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithNative_(element, className) {\n\t\treturn element.classList.contains(className);\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class without using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithoutNative_(element, className) {\n\t\treturn (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n\t}\n\n\t/**\n\t * Checks if the given element is empty or not.\n\t * @param {!Element} element\n\t * @return {boolean}\n\t */\n\tstatic isEmpty(element) {\n\t\treturn element.childNodes.length === 0;\n\t}\n\n\t/**\n\t * Check if an element matches a given selector.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t */\n\tstatic match(element, selector) {\n\t\tif (!element || element.nodeType !== 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar p = Element.prototype;\n\t\tvar m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\t\tif (m) {\n\t\t\treturn m.call(element, selector);\n\t\t}\n\n\t\treturn dom.matchFallback_(element, selector);\n\t}\n\n\t/**\n\t * Check if an element matches a given selector, using an internal implementation\n\t * instead of calling existing javascript functions.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic matchFallback_(element, selector) {\n\t\tvar nodes = document.querySelectorAll(selector, element.parentNode);\n\t\tfor (var i = 0; i < nodes.length; ++i) {\n\t\t\tif (nodes[i] === element) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the next sibling of the given element that matches the specified\n\t * selector, or null if there is none.\n\t * @param {!Element} element\n\t * @param {?string} selector\n\t */\n\tstatic next(element, selector) {\n\t\tdo {\n\t\t\telement = element.nextSibling;\n\t\t\tif (element && dom.match(element, selector)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t} while (element);\n\t\treturn null;\n\t}\n\n\t/**\n\t * Normalizes the event payload for delegate listeners.\n\t * @param {!Event} event\n\t */\n\tstatic normalizeDelegateEvent_(event) {\n\t\tevent.stopPropagation = dom.stopPropagation_;\n\t\tevent.stopImmediatePropagation = dom.stopImmediatePropagation_;\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element. This function normalizes\n\t * DOM event payloads and functions so they'll work the same way on all supported\n\t * browsers.\n\t * @param {!Element|string} element The DOM element to listen to the event on, or\n\t *   a selector that should be delegated on the entire document.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @param {boolean} opt_capture Flag indicating if listener should be triggered\n\t *   during capture phase, instead of during the bubbling phase. Defaults to false.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic on(element, eventName, callback, opt_capture) {\n\t\tif (core.isString(element)) {\n\t\t\treturn dom.delegate(document, eventName, element, callback);\n\t\t}\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.event) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\t\telement.addEventListener(eventName, callback, opt_capture);\n\t\treturn new DomEventHandle(element, eventName, callback, opt_capture);\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element once. This\n\t * function normalizes DOM event payloads and functions so they'll work the\n\t * same way on all supported browsers.\n\t * @param {!Element} element The DOM element to listen to the event on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *   is triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic once(element, eventName, callback) {\n\t\tvar domEventHandle = this.on(element, eventName, function() {\n\t\t\tdomEventHandle.removeListener();\n\t\t\treturn callback.apply(this, arguments);\n\t\t});\n\t\treturn domEventHandle;\n\t}\n\n\t/**\n\t * Gets the first parent from the given element that matches the specified\n\t * selector, or null if none match.\n\t * @param {!Element} element\n\t * @param {string} selector\n\t * @return {Element}\n\t */\n\tstatic parent(element, selector) {\n\t\treturn dom.closest(element.parentNode, selector);\n\t}\n\n\t/**\n\t * Registers a custom event.\n\t * @param {string} eventName The name of the custom event.\n\t * @param {!Object} customConfig An object with information about how the event\n\t *   should be handled.\n\t */\n\tstatic registerCustomEvent(eventName, customConfig) {\n\t\tdom.customEvents[eventName] = customConfig;\n\t}\n\n\t/**\n\t * Removes all the child nodes on a DOM node.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic removeChildren(node) {\n\t\tvar child;\n\t\twhile ((child = node.firstChild)) {\n\t\t\tnode.removeChild(child);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element.\n\t * @param {!Element|!NodeList} elements The element or elements to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t */\n\tstatic removeClasses(elements, classes) {\n\t\tif (!core.isObject(elements) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!elements.length) {\n\t\t\telements = [elements];\n\t\t}\n\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\tif ('classList' in elements[i]) {\n\t\t\t\tdom.removeClassesWithNative_(elements[i], classes);\n\t\t\t} else {\n\t\t\t\tdom.removeClassesWithoutNative_(elements[i], classes);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\tif (className) {\n\t\t\t\telement.classList.remove(className);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element without using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\telementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Replaces the first element with the second.\n\t * @param {Element} element1\n\t * @param {Element} element2\n\t */\n\tstatic replace(element1, element2) {\n\t\tif (element1 && element2 && element1 !== element2 && element1.parentNode) {\n\t\t\telement1.parentNode.insertBefore(element2, element1);\n\t\t\telement1.parentNode.removeChild(element1);\n\t\t}\n\t}\n\n\t/**\n\t * The function that replaces `stopImmediatePropagation_` for events.\n\t * @protected\n\t */\n\tstatic stopImmediatePropagation_() {\n\t\tthis.stopped = true;\n\t\tthis.stoppedImmediate = true;\n\t\tEvent.prototype.stopImmediatePropagation.call(this);\n\t}\n\n\t/**\n\t * The function that replaces `stopPropagation` for events.\n\t * @protected\n\t */\n\tstatic stopPropagation_() {\n\t\tthis.stopped = true;\n\t\tEvent.prototype.stopPropagation.call(this);\n\t}\n\n\t/**\n\t * Checks if the given element supports the given event type.\n\t * @param {!Element|string} element The DOM element or element tag name to check.\n\t * @param {string} eventName The name of the event to check.\n\t * @return {boolean}\n\t */\n\tstatic supportsEvent(element, eventName) {\n\t\tif (dom.customEvents[eventName]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (core.isString(element)) {\n\t\t\tif (!elementsByTag[element]) {\n\t\t\t\telementsByTag[element] = document.createElement(element);\n\t\t\t}\n\t\t\telement = elementsByTag[element];\n\t\t}\n\t\treturn 'on' + eventName in element;\n\t}\n\n\t/**\n\t * Converts the given argument to a DOM element. Strings are assumed to\n\t * be selectors, and so a matched element will be returned. If the arg\n\t * is already a DOM element it will be the return value.\n\t * @param {string|Element|Document} selectorOrElement\n\t * @return {Element} The converted element, or null if none was found.\n\t */\n\tstatic toElement(selectorOrElement) {\n\t\tif (core.isElement(selectorOrElement) || core.isDocument(selectorOrElement)) {\n\t\t\treturn selectorOrElement;\n\t\t} else if (core.isString(selectorOrElement)) {\n\t\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t\t} else {\n\t\t\t\treturn document.querySelector(selectorOrElement);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element. If any of the classes\n\t * is present, it will be removed from the element, or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.toggleClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.toggleClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\telement.classList.toggle(className);\n\t\t});\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element without using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = ' ' + classes[i] + ' ';\n\t\t\tvar classIndex = elementClassName.indexOf(className);\n\n\t\t\tif (classIndex === -1) {\n\t\t\t\telementClassName = elementClassName + classes[i] + ' ';\n\t\t\t} else {\n\t\t\t\telementClassName = elementClassName.substring(0, classIndex) + ' ' +\n\t\t\t\t\telementClassName.substring(classIndex + className.length);\n\t\t\t}\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Triggers the specified event on the given element.\n\t * NOTE: This should mostly be used for testing, not on real code.\n\t * @param {!Element} element The node that should trigger the event.\n\t * @param {string} eventName The name of the event to be triggred.\n\t * @param {Object=} opt_eventObj An object with data that should be on the\n\t *   triggered event's payload.\n\t */\n\tstatic triggerEvent(element, eventName, opt_eventObj) {\n\t\tif (dom.isAbleToInteractWith_(element, eventName)) {\n\t\t\tvar eventObj = document.createEvent('HTMLEvents');\n\t\t\teventObj.initEvent(eventName, true, true);\n\t\t\tobject.mixin(eventObj, opt_eventObj);\n\t\t\telement.dispatchEvent(eventObj);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers the given listeners array.\n\t * @param {Array<!function()>} listeners\n\t * @param {!Event} event\n\t * @param {!Element} element\n\t * @param {!Array} defaultFns Array to collect default listeners in, instead\n\t *     of running them.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic triggerListeners_(listeners, event, element, defaultFns) {\n\t\tvar ret = true;\n\t\tlisteners = listeners || [];\n\t\tfor (var i = 0; i < listeners.length && !event.stoppedImmediate; i++) {\n\t\t\tif (listeners[i].defaultListener_) {\n\t\t\t\tdefaultFns.push({\n\t\t\t\t\telement,\n\t\t\t\t\tfn: listeners[i]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tret &= listeners[i](event);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Triggers all listeners for the given event type that are stored in the\n\t * specified element.\n\t * @param {!Element} container\n\t * @param {!Element} element\n\t * @param {!Event} event\n\t * @param {!Array} defaultFns Array to collect default listeners in, instead\n\t *     of running them.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *     false, or true otherwise.\n\t * @protected\n\t */\n\tstatic triggerMatchedListeners_(container, element, event, defaultFns) {\n\t\tif (event.type === 'click' && event.button === 2) {\n\t\t\t// Firefox triggers \"click\" events on the document for right clicks. This\n\t\t\t// causes our delegate logic to trigger it for regular elements too, which\n\t\t\t// shouldn't happen. Ignoring them here.\n\t\t\treturn;\n\t\t}\n\n\t\tvar data = domData.get(element);\n\t\tvar listeners = data.listeners[event.type];\n\t\tvar ret = dom.triggerListeners_(listeners, event, element, defaultFns);\n\n\t\tvar selectorsMap = domData.get(container).delegating[event.type].selectors;\n\t\tvar selectors = Object.keys(selectorsMap);\n\t\tfor (var i = 0; i < selectors.length && !event.stoppedImmediate; i++) {\n\t\t\tif (dom.match(element, selectors[i])) {\n\t\t\t\tlisteners = selectorsMap[selectors[i]];\n\t\t\t\tret &= dom.triggerListeners_(listeners, event, element, defaultFns);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n}\n\nvar elementsByTag = {};\ndom.customEvents = {};\n\nexport default dom;\n"],"sourceRoot":"/source/"}