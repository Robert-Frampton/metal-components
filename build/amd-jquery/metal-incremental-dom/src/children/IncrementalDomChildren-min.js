define(["exports","metal/src/metal","../IncrementalDomAop","../utils/IncrementalDomUtils"],function(e,n,t,l){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function f(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){var t=i({parent:s},O.CHILD_OWNER,p);return n?(t.text=e[0],e.length>1&&(t.args=e)):(t.tag=e[0],t.config=v["default"].buildConfigFromCall(e),v["default"].isComponentTag(t.tag)&&(t.config.ref=h["default"].isDefAndNotNull(t.config.ref)?t.config.ref:p.buildRef(e[0])),t.config.children=[]),o(t),t}function o(e){s.config.children.push(e)}function u(){s===m?(C["default"].stopInterception(),D=!1,g(m),g=null,s=null,p=null,m=null):s=s.parent}function c(e){for(var n=arguments.length,t=Array(n>1?n-1:0),l=1;n>l;l++)t[l-1]=arguments[l];s=a(t)}function d(e){for(var n=arguments.length,t=Array(n>1?n-1:0),l=1;n>l;l++)t[l-1]=arguments[l];a(t,!0)}Object.defineProperty(e,"__esModule",{value:!0});var g,s,p,m,h=r(n),C=r(t),v=r(l),O=function(){function e(){f(this,e)}return e.capture=function(e,n){p=e,g=n,m={config:{children:[]}},s=m,D=!0,C["default"].startInterception({elementClose:u,elementOpen:c,text:d})},e.render=function(n,t){if(D)return void o(n);if(!t||!t(n))if(h["default"].isDef(n.text)){var l=n.args?n.args:[];l[0]=n.text,IncrementalDOM.text.apply(null,l)}else{var r=v["default"].buildCallFromConfig(n.tag,n.config);if(IncrementalDOM.elementOpen.apply(null,r),n.config.children)for(var i=0;i<n.config.children.length;i++)e.render(n.config.children[i],t);IncrementalDOM.elementClose(n.tag)}},e}(),D=!1;O.CHILD_OWNER="__metalChildOwner",e["default"]=O});