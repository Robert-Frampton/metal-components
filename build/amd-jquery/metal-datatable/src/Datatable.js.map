{"version":3,"sources":["Datatable.js"],"names":["Datatable","assertNoMixedTypesInArrays_","value","lastType","acceptArray","v","type","getValueType_","assertSameTypes_","acceptObject","visit_","type1","type2","Error","attached","keyboardFocusManager_","setFocusHandler","handleNextFocus_","bind","start","buildRef_","prefix","row","col","buildRefLastColumn_","event","data","element","delegateTarget","cellLength","parseInt","getAttribute","buildRefLastRow_","parentNode","rowLength","collectColumnsFromArrayValues_","expandedValue","isFirstArrayItemObject","TYPES","OBJECT","columns","columnsType","forEach","item","Object","keys","key","formatColumns","formatColumnsType","collectColumnsFromObjectKeys_","collectColumnsFromValues_","ARRAY","disposed","dispose","extractDataFromRef_","ref","matches","REF_REGEX","exec","substr","length","NULL","undefined","UNDEFINED","Array","isArray","isObject","contentKind","STRING","handleClickToggle_","toggleTableContents","handleDownArrowKey_","metaKey","isMac","handleEnterKey_","refs","stopPropagation","handleKeydownToggle_","keyCode","handleLeftArrowKey_","handleRightArrowKey_","handleUpArrowKey_","handleNextFocusData_","returnValue","preventDefault","isAlreadyExpanded","setData_","visitValuesAndExpandType_","visitValuesAndWrapStringValues_","label","toggleClasses","labelClasses","next","hiddenClasses","k","val","reference","expanded","toIncDom","register","STATE","setter","displayColumnsType","validator","isBoolean","isFunction","sort","columnstype","isString","tableClasses","BOOLEAN","NUMBER"],"mappings":"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","file":"node_modules/metal-datatable/src/Datatable.js","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport templates from './Datatable.soy.js';\nimport Component from 'metal-component';\nimport KeyboardFocusManager from 'metal-keyboard-focus';\nimport Soy from 'metal-soy';\nimport UA from 'metal-useragent';\n\nclass Datatable extends Component {\n\n\t/**\n\t * Visits array items and asserts that it only contains one literal type.\n\t * @param {array} value\n\t * @protected\n\t * @throws {Error} If types are different.\n\t */\n\tassertNoMixedTypesInArrays_(value) {\n\t\tvar lastType;\n\t\tvar acceptArray = (v) => {\n\t\t\tvar type = this.getValueType_(v);\n\t\t\tthis.assertSameTypes_(lastType, type);\n\t\t\tlastType = type;\n\t\t\tthis.assertNoMixedTypesInArrays_(v);\n\t\t};\n\t\tvar acceptObject = (v) => this.assertNoMixedTypesInArrays_(v);\n\t\tthis.visit_(value, acceptArray, acceptObject);\n\t}\n\n\t/**\n\t * Asserts literal types are not the same.\n\t * @param {string} type1\n\t * @param {string} type2\n\t * @protected\n\t * @throws {Error} If types are different.\n\t */\n\tassertSameTypes_(type1, type2) {\n\t\tif (type1 && type2 && type1 !== type2) {\n\t\t\tthrow new Error('Datatable does not support mixed types in arrays.');\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.keyboardFocusManager_ = new KeyboardFocusManager(this, 'td,th')\n\t\t\t.setFocusHandler(this.handleNextFocus_.bind(this))\n\t\t\t.start();\n\t}\n\n\t/**\n\t * Builds a ref with for the given row and column positions.\n\t * @param {string} prefix\n\t * @param {number} row\n\t * @param {number} col\n\t * @return {string}\n\t * @protected\n\t */\n\tbuildRef_(prefix, row, col) {\n\t\treturn prefix + row + '-' + col;\n\t}\n\n\t/**\n\t * Builds a ref string pointing to the last column.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @return {string}\n\t * @protected\n\t */\n\tbuildRefLastColumn_(event, data) {\n\t\tconst element = event.delegateTarget;\n\t\tconst cellLength = parseInt(element.getAttribute('data-cols'), 10);\n\t\treturn this.buildRef_(data.prefix, data.row, cellLength - 1);\n\t}\n\n\t/**\n\t * Builds a ref string pointing to the last row.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @return {string}\n\t * @protected\n\t */\n\tbuildRefLastRow_(event, data) {\n\t\tconst element = event.delegateTarget.parentNode;\n\t\tconst rowLength = parseInt(element.getAttribute('data-rows'), 10);\n\t\treturn this.buildRef_(data.prefix, rowLength - 1, data.col);\n\t}\n\n\t/**\n\t * Extract keys from an array of objects. Column values are aggregated from\n\t * extracting 1-deep key values. For other array types keys are not\n\t * extracted and values are plotted in one column vertically.\n\t * @param {object} expandedValue\n\t * @protected\n\t */\n\tcollectColumnsFromArrayValues_(expandedValue) {\n\t\tvar value = expandedValue.value;\n\t\tvar isFirstArrayItemObject = value[0] && value[0].type === Datatable.TYPES.OBJECT;\n\t\tif (isFirstArrayItemObject) {\n\t\t\tlet columns = {};\n\t\t\tlet columnsType = {};\n\t\t\tvalue.forEach((item) => Object.keys(item.value).forEach((key) => {\n\t\t\t\tcolumns[key] = true;\n\t\t\t\tcolumnsType[key] = item.value[key].type;\n\t\t\t}));\n\t\t\texpandedValue.columns = this.formatColumns(Object.keys(columns));\n\t\t\texpandedValue.columnsType = this.formatColumnsType(columnsType);\n\t\t}\n\t}\n\n\t/**\n\t * Extract columns from object keys.\n\t * @param {object} expandedValue\n\t * @protected\n\t */\n\tcollectColumnsFromObjectKeys_(expandedValue) {\n\t\tvar value = expandedValue.value;\n\t\tlet columns = {};\n\t\tlet columnsType = {};\n\t\tObject.keys(value).forEach((key) => {\n\t\t\tcolumns[key] = true;\n\t\t\tcolumnsType[key] = value[key].type;\n\t\t});\n\t\texpandedValue.columns = this.formatColumns(Object.keys(columns));\n\t\texpandedValue.columnsType = this.formatColumnsType(columnsType);\n\t}\n\n\t/**\n\t * Analyzes the expanded object containing type and value and extracts an\n\t * array of columns to be used for plotting.\n\t * @param {object} expandedValue\n\t * @protected\n\t */\n\tcollectColumnsFromValues_(expandedValue) {\n\t\tswitch (expandedValue.type) {\n\t\t\tcase Datatable.TYPES.ARRAY:\n\t\t\t\tthis.collectColumnsFromArrayValues_(expandedValue);\n\t\t\t\tbreak;\n\t\t\tcase Datatable.TYPES.OBJECT:\n\t\t\t\tthis.collectColumnsFromObjectKeys_(expandedValue);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposed() {\n\t\tif (this.keyboardFocusManager_) {\n\t\t\tthis.keyboardFocusManager_.dispose();\n\t\t\tthis.keyboardFocusManager_ = null;\n\t\t}\n\t}\n\n\t/**\n\t * Gets data (prefix, row and column) from the given ref.\n\t * @param {string} ref\n\t * @return {!{col: number, prefix: string, row: number}}\n\t * @protected\n\t */\n\textractDataFromRef_(ref) {\n\t\tconst matches = Datatable.REF_REGEX.exec(ref);\n\t\treturn {\n\t\t\tcol: parseInt(matches[2], 10),\n\t\t\tprefix: ref.substr(0, ref.length - matches[0].length),\n\t\t\trow: parseInt(matches[1], 10)\n\t\t};\n\t}\n\n\t/**\n\t * Internal helper to get literal JSON type of a value.\n\t * @param {*} value\n\t * @return {string} Type inferred from JSON value.\n\t */\n\tgetValueType_(value) {\n\t\tif (value === null) {\n\t\t\treturn Datatable.TYPES.NULL;\n\t\t}\n\t\tif (value === undefined) {\n\t\t\treturn Datatable.TYPES.UNDEFINED;\n\t\t}\n\t\tif (Array.isArray(value)) {\n\t\t\treturn Datatable.TYPES.ARRAY;\n\t\t}\n\t\tif (core.isObject(value) && value.contentKind === 'HTML') {\n\t\t\treturn Datatable.TYPES.STRING;\n\t\t}\n\t\treturn typeof value;\n\t}\n\n\t/**\n\t * Handles a 'click' event on a table label. Shows/hides the table.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleClickToggle_(event) {\n\t\tthis.toggleTableContents(event.delegateTarget);\n\t}\n\n\t/**\n\t * Handles pressing the down arrow key inside a datatable grid.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @return {string|boolean}\n\t * @protected\n\t */\n\thandleDownArrowKey_(event, data) {\n\t\tif (event.metaKey && UA.isMac) {\n\t\t\treturn this.buildRefLastRow_(event, data);\n\t\t} else {\n\t\t\treturn this.buildRef_(data.prefix, data.row + 1, data.col);\n\t\t}\n\t}\n\n\t/**\n\t * Handles pressing the enter key inside a datatable grid. Shows/hides the\n\t * datatable inside the columns, if there is one.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @protected\n\t */\n\thandleEnterKey_(event, data) {\n\t\tconst ref = this.buildRef_(data.prefix, data.row, data.col) + '-label';\n\t\tif (this.refs[ref]) {\n\t\t\tthis.toggleTableContents(this.refs[ref]);\n\t\t}\n\t\tevent.stopPropagation();\n\t}\n\n\t/**\n\t * Handles a 'keydown' event on a table label. Shows/hides the table if the\n\t * pressed key was either ENTER or SPACE.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleKeydownToggle_(event) {\n\t\tif (event.keyCode === 13 || event.keyCode === 32) {\n\t\t\tthis.toggleTableContents(event.delegateTarget);\n\t\t}\n\t}\n\n\t/**\n\t * Handles pressing the left arrow key inside a datatable grid.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @return {string|boolean}\n\t * @protected\n\t */\n\thandleLeftArrowKey_(event, data) {\n\t\tif (event.metaKey && UA.isMac) {\n\t\t\treturn this.buildRef_(data.prefix, data.row, 0);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Handles pressing the right arrow key inside a datatable grid.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @return {string|boolean}\n\t * @protected\n\t */\n\thandleRightArrowKey_(event, data) {\n\t\tif (event.metaKey && UA.isMac) {\n\t\t\treturn this.buildRefLastColumn_(event, data);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Handles pressing the up arrow key inside a datatable grid.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @return {string|boolean}\n\t * @protected\n\t */\n\thandleUpArrowKey_(event, data) {\n\t\tif (event.metaKey && UA.isMac) {\n\t\t\treturn this.buildRef_(data.prefix, 0, data.col);\n\t\t} else {\n\t\t\treturn this.buildRef_(data.prefix, data.row - 1, data.col);\n\t\t}\n\t}\n\n\t/**\n\t * Handles focus through keyboard, given the extracted ref data.\n\t * @param {!Event} event\n\t * @param {!Object} data Data extracted from the current cell's ref.\n\t * @return {boolean|string|Element}\n\t * @protected\n\t */\n\thandleNextFocusData_(event, data) {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 13:\n\t\t\tcase 32:\n\t\t\t\treturn this.handleEnterKey_(event, data);\n\t\t\tcase 33:\n\t\t\t\treturn this.buildRef_(data.prefix, 0, data.col);\n\t\t\tcase 34:\n\t\t\t\treturn this.buildRefLastRow_(event, data);\n\t\t\tcase 35:\n\t\t\t\treturn this.buildRefLastColumn_(event, data);\n\t\t\tcase 36:\n\t\t\t\treturn this.buildRef_(data.prefix, data.row, 0);\n\t\t\tcase 37:\n\t\t\t\treturn this.handleLeftArrowKey_(event, data);\n\t\t\tcase 38:\n\t\t\t\treturn this.handleUpArrowKey_(event, data);\n\t\t\tcase 39:\n\t\t\t\treturn this.handleRightArrowKey_(event, data);\n\t\t\tcase 40:\n\t\t\t\treturn this.handleDownArrowKey_(event, data);\n\t\t}\n\t}\n\n\t/**\n\t * Handles focus through keyboard.\n\t * @param {!Event} event\n\t * @return {boolean|string|Element}\n\t * @protected\n\t */\n\thandleNextFocus_(event) {\n\t\tconst ref = event.delegateTarget.getAttribute('ref');\n\t\tconst data = this.extractDataFromRef_(ref);\n\t\tconst returnValue = this.handleNextFocusData_(event, data);\n\t\tif (returnValue) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\treturn returnValue;\n\t}\n\n\t/**\n\t * Returns true if data is already expanded, false otherwise.\n\t * @param {*} data\n\t * @return {boolean}\n\t */\n\tisAlreadyExpanded(data) {\n\t\treturn core.isObject(data) && 'columns' in data && 'type' in data;\n\t}\n\n\t/**\n\t * Setter for the `data` state property.\n\t * @param {!Object}\n\t * @return {!Object}\n\t * @protected\n\t */\n\tsetData_(data) {\n\t\tif (!this.isAlreadyExpanded(data)) {\n\t\t\tthis.assertNoMixedTypesInArrays_(data);\n\t\t\tdata = this.visitValuesAndExpandType_(data);\n\t\t}\n\t\treturn this.visitValuesAndWrapStringValues_(data);\n\t}\n\n\t/**\n\t * Toggles sibling table content related to given label.\n\t * @param {!Element} label\n\t */\n\ttoggleTableContents(label) {\n\t\tdom.toggleClasses(label, this.labelClasses);\n\t\tdom.toggleClasses(dom.next(label, 'table'), this.hiddenClasses);\n\t}\n\n\t/**\n\t * Internal non-recursive visitor helper to navigate over JSON values.\n\t * @param {*} value The value to start the visit.\n\t * @param {!function} acceptArray Accept logic for array items.\n\t * @param {!function} acceptObject Accept logic for object keys and values.\n\t * @protected\n\t */\n\tvisit_(value, acceptArray, acceptObject) {\n\t\tswitch (this.getValueType_(value)) {\n\t\t\tcase Datatable.TYPES.ARRAY:\n\t\t\t\tvalue.forEach((v, k) => acceptArray(v, k, value));\n\t\t\t\tbreak;\n\t\t\tcase Datatable.TYPES.OBJECT:\n\t\t\t\tObject.keys(value).forEach((k) => acceptObject(value[k], k, value));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Visits all json values and wraps it in object containing its type and\n\t * value.\n\t * @param {*} value The value to start the visit.\n\t * @return {object} Wrapped object containing type and value.\n\t * @protected\n\t */\n\tvisitValuesAndExpandType_(value) {\n\t\tvar acceptArray = (val, key, reference) => reference[key] = this.visitValuesAndExpandType_(val);\n\t\tvar acceptObject = (val, key, reference) => reference[key] = this.visitValuesAndExpandType_(val);\n\t\tthis.visit_(value, acceptArray, acceptObject);\n\t\tvar type = this.getValueType_(value);\n\t\tvar expanded = {\n\t\t\ttype: type,\n\t\t\tvalue: value\n\t\t};\n\t\tthis.collectColumnsFromValues_(expanded);\n\t\treturn expanded;\n\t}\n\n\t/**\n\t * Visits all json values and wraps it in special `Soy.toIncDom` helper if\n\t * it's string.\n\t * @param {*} value The value to start the visit.\n\t * @return {object} Wrapped string.\n\t * @protected\n\t */\n\tvisitValuesAndWrapStringValues_(value) {\n\t\tvar acceptArray = (val, key, reference) => reference[key] = this.visitValuesAndWrapStringValues_(val);\n\t\tvar acceptObject = (val, key, reference) => reference[key] = this.visitValuesAndWrapStringValues_(val);\n\t\tthis.visit_(value, acceptArray, acceptObject);\n\t\tif (core.isObject(value)) {\n\t\t\tvar type = this.getValueType_(value.value);\n\t\t\tif (type === Datatable.TYPES.STRING) {\n\t\t\t\tvalue.value = Soy.toIncDom(value.value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n}\nSoy.register(Datatable, templates);\n\nDatatable.STATE = {\n\t/**\n\t * Data to be plotted on datatable. Any JSON type is supported if it does\n\t * not contain mixed types inside an array.\n\t * @type {*}\n\t */\n\tdata: {\n\t\tsetter: 'setData_'\n\t},\n\n\t/**\n\t * If true displays types in column.\n\t * @type {boolean}\n\t * @default true\n\t */\n\tdisplayColumnsType: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: true\n\t},\n\n\t/**\n\t * Formats array of columns extracted from JSON data. Relevant for operates\n\t * over column values, such as sorting and formatting.\n\t * @type {function(array.<string>)}\n\t */\n\tformatColumns: {\n\t\tvalidator: core.isFunction,\n\t\tvalue: function(columns) {\n\t\t\treturn columns.sort();\n\t\t}\n\t},\n\n\t/**\n\t * Formats map of columns type extracted from JSON data. Relevant for\n\t * operates over column values, such as sorting and formatting.\n\t * @type {function(map.<string,string>)}\n\t */\n\tformatColumnsType: {\n\t\tvalidator: core.isFunction,\n\t\tvalue: function(columnstype) {\n\t\t\treturn columnstype;\n\t\t}\n\t},\n\n\t/**\n\t * Css classes to be used for hidden state.\n\t * @type {string}\n\t * @default 'hidden'\n\t */\n\thiddenClasses: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'hidden'\n\t},\n\n\t/**\n\t * Css classes to be used for labels.\n\t * @type {string}\n\t * @default 'collapsed expanded'\n\t */\n\tlabelClasses: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'collapsed expanded'\n\t},\n\n\t/**\n\t * Css classes to be used for tables.\n\t * @type {string}\n\t * @default 'table table-condensed table-hover'\n\t */\n\ttableClasses: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'table table-bordered table-condensed table-hover'\n\t}\n};\n\n// The regex used to extract the row/column positions from an element's ref.\nDatatable.REF_REGEX = /(\\d+)-(\\d+)$/;\n\n/**\n * Datatable supported types.\n * @type {object}\n * @static\n */\nDatatable.TYPES = {\n\tARRAY: 'array',\n\tBOOLEAN: 'boolean',\n\tNULL: 'null',\n\tNUMBER: 'number',\n\tOBJECT: 'object',\n\tSTRING: 'string',\n\tUNDEFINED: 'undefined'\n};\n\nexport default Datatable;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('datatable', Datatable);"],"sourceRoot":"/source/"}