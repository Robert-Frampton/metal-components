{"version":3,"sources":["Scrollspy.js"],"names":["Scrollspy","opt_config","regions","scrollHandle_","on","scrollElement","checkPosition","bind","init","deactivateAll","dispose","index","activeIndex","deactivate","addClasses","getElementForIndex","activeClass","scrollHeight","getScrollHeight_","scrollTop","getScrollTop","offset","activate","length","findBestRegionAt_","removeClasses","i","origin","getCurrentPosition","top","region","lastRegion","scrollElementRegion_","resolveElement","link","getHeight","getClientHeight","refresh","onScrollElementChanged_","event","newVal","getRegion","scrollHeight_","links","element","querySelectorAll","selector","hash","document","getElementById","substring","push","bottom","sortRegions_","sort","a","b","STATE","validator","isString","value","isNumber","isFunction","identityFunction","setter","toElement","register"],"mappings":"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","file":"node_modules/metal-scrollspy/src/Scrollspy.js","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport Position from 'metal-position';\nimport State from 'metal-state';\n\n/**\n * Scrollspy utility.\n */\nclass Scrollspy extends State {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\t/**\n\t\t * Holds the regions cache.\n\t\t * @type {!Array}\n\t\t * @private\n\t\t * @default []\n\t\t */\n\t\tthis.regions = [];\n\n\t\t/**\n\t\t * Holds event handle that listens scroll shared event emitter proxy.\n\t\t * @type {!EventHandle}\n\t\t * @protected\n\t\t */\n\t\tthis.scrollHandle_ = dom.on(this.scrollElement, 'scroll', this.checkPosition.bind(this));\n\n\t\tthis.init();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.deactivateAll();\n\t\tthis.scrollHandle_.dispose();\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Activates index matching element.\n\t * @param {number} index\n\t */\n\tactivate(index) {\n\t\tif (this.activeIndex >= 0) {\n\t\t\tthis.deactivate(this.activeIndex);\n\t\t}\n\t\tthis.activeIndex = index;\n\t\tdom.addClasses(this.getElementForIndex(index), this.activeClass);\n\t}\n\n\t/**\n\t * Checks position of elements and activate the one in region.\n\t */\n\tcheckPosition() {\n\t\tvar scrollHeight = this.getScrollHeight_();\n\t\tvar scrollTop = Position.getScrollTop(this.scrollElement);\n\n\t\tif (scrollHeight < scrollTop + this.offset) {\n\t\t\tthis.activate(this.regions.length - 1);\n\t\t\treturn;\n\t\t}\n\n\t\tvar index = this.findBestRegionAt_();\n\t\tif (index !== this.activeIndex) {\n\t\t\tif (index === -1) {\n\t\t\t\tthis.deactivateAll();\n\t\t\t} else {\n\t\t\t\tthis.activate(index);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Deactivates index matching element.\n\t * @param {number} index\n\t */\n\tdeactivate(index) {\n\t\tdom.removeClasses(this.getElementForIndex(index), this.activeClass);\n\t}\n\n\t/**\n\t * Deactivates all elements.\n\t */\n\tdeactivateAll() {\n\t\tfor (var i = 0; i < this.regions.length; i++) {\n\t\t\tthis.deactivate(i);\n\t\t}\n\t\tthis.activeIndex = -1;\n\t}\n\n\t/**\n\t * Finds best region to activate.\n\t * @return {number} The index of best region found.\n\t */\n\tfindBestRegionAt_() {\n\t\tvar index = -1;\n\t\tvar origin = this.getCurrentPosition();\n\t\tif (this.regions.length > 0 && origin >= this.regions[0].top) {\n\t\t\tfor (var i = 0; i < this.regions.length; i++) {\n\t\t\t\tvar region = this.regions[i];\n\t\t\t\tvar lastRegion = i === this.regions.length - 1;\n\t\t\t\tif ((origin >= region.top) && (lastRegion || (origin < this.regions[i + 1].top))) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn index;\n\t}\n\n\t/**\n\t * Gets the current position in the page.\n\t * @return {number}\n\t */\n\tgetCurrentPosition() {\n\t\tvar scrollTop = Position.getScrollTop(this.scrollElement);\n\t\treturn scrollTop + this.offset + this.scrollElementRegion_.top;\n\t}\n\n\t/**\n\t * Returns the element that should be used for the link at the given index.\n\t * @param {number} index\n\t * @return {!Element}\n\t */\n\tgetElementForIndex(index) {\n\t\treturn this.resolveElement(this.regions[index].link);\n\t}\n\n\t/**\n\t * Gets the scroll height of `scrollElement`.\n\t * @return {number}\n\t * @protected\n\t */\n\tgetScrollHeight_() {\n\t\tvar scrollHeight = Position.getHeight(this.scrollElement);\n\t\tscrollHeight += this.scrollElementRegion_.top;\n\t\tscrollHeight -= Position.getClientHeight(this.scrollElement);\n\t\treturn scrollHeight;\n\t}\n\n\t/**\n\t * Initializes the behavior of scrollspy. It's important to have this as a\n\t * separate function so subclasses can override it (babel doesn't allow using\n\t * `this` on constructors before calling `super()`).\n\t */\n\tinit() {\n\t\tthis.refresh();\n\t\tthis.on('elementChanged', this.refresh);\n\t\tthis.on('offsetChanged', this.checkPosition);\n\t\tthis.on('scrollElementChanged', this.onScrollElementChanged_);\n\t\tthis.on('selectorChanged', this.refresh);\n\t}\n\n\t/**\n\t * Fired when the value of the `scrollElement` state changes.\n\t * Refreshes the spy and updates the event handler to listen to the new scroll element.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\tonScrollElementChanged_(event) {\n\t\tthis.refresh();\n\n\t\tthis.scrollHandle_.dispose();\n\t\tthis.scrollHandle_ = dom.on(event.newVal, 'scroll', this.checkPosition.bind(this));\n\t}\n\n\t/**\n\t * Refreshes all regions from document. Relevant when spying elements that\n\t * nodes can be added and removed.\n\t */\n\trefresh() {\n\t\t// Removes the \"active\" class from all current regions.\n\t\tthis.deactivateAll();\n\n\t\tthis.scrollElementRegion_ = Position.getRegion(this.scrollElement);\n\t\tthis.scrollHeight_ = this.getScrollHeight_();\n\n\t\tthis.regions = [];\n\t\tvar links = this.element.querySelectorAll(this.selector);\n\t\tvar scrollTop = Position.getScrollTop(this.scrollElement);\n\t\tfor (var i = 0; i < links.length; ++i) {\n\t\t\tvar link = links[i];\n\t\t\tif (link.hash && (link.hash.length > 1)) {\n\t\t\t\tvar element = document.getElementById(link.hash.substring(1));\n\t\t\t\tif (element) {\n\t\t\t\t\tvar region = Position.getRegion(element);\n\t\t\t\t\tthis.regions.push({\n\t\t\t\t\t\tlink: link,\n\t\t\t\t\t\ttop: region.top + scrollTop,\n\t\t\t\t\t\tbottom: region.bottom + scrollTop\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.sortRegions_();\n\n\t\t// Removes the \"active\" class from all new regions and then activate the right one for\n\t\t// the current position.\n\t\tthis.deactivateAll();\n\t\tthis.checkPosition();\n\t}\n\n\t/**\n\t * Sorts regions from lower to higher on y-axis.\n\t * @protected\n\t */\n\tsortRegions_() {\n\t\tthis.regions.sort(function(a, b) {\n\t\t\treturn a.top - b.top;\n\t\t});\n\t}\n}\n\nScrollspy.STATE = {\n\t/**\n\t * Class to be used as active class.\n\t * @type {string}\n\t */\n\tactiveClass: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'active'\n\t},\n\n\t/**\n\t * The index of the currently active link.\n\t * @type {number}\n\t */\n\tactiveIndex: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: -1\n\t},\n\n\t/**\n\t * Function that receives the matching element as argument and return\n\t * itself. Relevant when the `activeClass` must be applied to a different\n\t * element, e.g. a parentNode.\n\t * @type {function}\n\t * @default core.identityFunction\n\t */\n\tresolveElement: {\n\t\tvalidator: core.isFunction,\n\t\tvalue: core.identityFunction\n\t},\n\n\t/**\n\t * The scrollElement element to be used as scrollElement area for scrollspy.\n\t * The scrollElement is where the scroll event is listened from.\n\t * @type {Element|Window}\n\t */\n\tscrollElement: {\n\t\tsetter: dom.toElement,\n\t\tvalue: document\n\t},\n\n\t/**\n\t * Defines the offset that triggers scrollspy.\n\t * @type {number}\n\t * @default 0\n\t */\n\toffset: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 0\n\t},\n\n\t/**\n\t * Element to be used as alignment reference of scrollspy.\n\t * @type {Element}\n\t */\n\telement: {\n\t\tsetter: dom.toElement\n\t},\n\n\t/**\n\t * Selector to query elements inside `element` to be activated.\n\t * @type {Element}\n\t * @default 'a'\n\t */\n\tselector: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'a'\n\t}\n};\n\nexport default Scrollspy;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('scrollspy', Scrollspy);"],"sourceRoot":"/source/"}