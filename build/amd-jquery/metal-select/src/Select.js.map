{"version":3,"sources":["Select.js"],"names":["Select","element","items","querySelectorAll","i","length","item","index","option","querySelector","focusedIndex_","focus","components","dropdown","data","openedWithKeyboard_","focusIndex_","changes","expanded","event","selectedIndex","findItemIndex_","delegateTarget","getDropdown","close","preventDefault","keyCode","isDefAndNotNull","hasClass","target","open","map","toIncDom","register","STATE","arrowClass","value","buttonClass","validator","isString","hiddenInputName","setter","val","Array","valueFn","label","isNumber","values","ELEMENT_CLASSES"],"mappings":"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","file":"node_modules/metal-select/src/Select.js","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\n\nimport 'metal-dropdown';\nimport templates from './Select.soy.js';\n\n/**\n * Responsible for rendering and handling a custom select component, based\n * on `Dropdown`.\n */\nclass Select extends Component {\n\t/**\n\t * Finds the index of the given element in the items array.\n\t * @param {!Element} element\n\t * @return {number}\n\t * @protected\n\t */\n\tfindItemIndex_(element) {\n\t\tvar items = this.element.querySelectorAll('li');\n\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\tif (items.item(i) === element) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the option at the given index.\n\t * @param {number} index\n\t * @protected\n\t */\n\tfocusIndex_(index) {\n\t\tvar option = this.element.querySelector('.select-option:nth-child(' + (index + 1) + ') a');\n\t\tif (option) {\n\t\t\tthis.focusedIndex_ = index;\n\t\t\toption.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the `Dropdown` instance used by this `Select`.\n\t * @return {!Dropdown}\n\t */\n\tgetDropdown() {\n\t\treturn this.components.dropdown;\n\t}\n\n\t/**\n\t * Handles a `stateSynced` event for the dropdown.\n\t * @param {!Object} data\n\t * @protected\n\t */\n\thandleDropdownStateSynced_(data) {\n\t\tif (this.openedWithKeyboard_) {\n\t\t\t// This is done on `stateSynced` because the items need to have already\n\t\t\t// been made visible before we try focusing them.\n\t\t\tthis.focusIndex_(0);\n\t\t\tthis.openedWithKeyboard_ = false;\n\t\t} else if (data.changes.expanded) {\n\t\t\tthis.focusedIndex_ = null;\n\t\t}\n\t}\n\n\t/**\n\t * Handles a `click` event on one of the items. Updates `selectedIndex`\n\t * accordingly.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleItemClick_(event) {\n\t\tthis.selectedIndex = this.findItemIndex_(event.delegateTarget);\n\t\tthis.getDropdown().close();\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles a `keydown` event on this component. Handles keyboard controls.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleKeyDown_(event) {\n\t\tif (this.getDropdown().expanded) {\n\t\t\tswitch (event.keyCode) {\n\t\t\t\tcase 27:\n\t\t\t\t\tthis.getDropdown().close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 38:\n\t\t\t\t\tthis.focusedIndex_ = core.isDefAndNotNull(this.focusedIndex_) ? this.focusedIndex_ : 1;\n\t\t\t\t\tthis.focusIndex_(this.focusedIndex_ === 0 ? this.items.length - 1 : this.focusedIndex_ - 1);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 40:\n\t\t\t\t\tthis.focusedIndex_ = core.isDefAndNotNull(this.focusedIndex_) ? this.focusedIndex_ : -1;\n\t\t\t\t\tthis.focusIndex_(this.focusedIndex_ === this.items.length - 1 ? 0 : this.focusedIndex_ + 1);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if ((event.keyCode === 13 || event.keyCode === 32) && dom.hasClass(event.target, 'dropdown-select')) {\n\t\t\tthis.openedWithKeyboard_ = true;\n\t\t\tthis.getDropdown().open();\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Setter for items attribute.\n\t * @param {!Array<string>} items\n\t * @protected\n\t */\n\tsetItems_(items) {\n\t\treturn items.map((item) => Soy.toIncDom(item));\n\t}\n\n}\nSoy.register(Select, templates);\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nSelect.STATE = {\n\t/**\n\t * The CSS class used by the select menu arrow.\n\t * @type {string}\n\t * @default 'caret'\n\t */\n\tarrowClass: {\n\t\tvalue: 'caret'\n\t},\n\n\t/**\n\t * The CSS class used by the select menu button.\n\t * @type {string}\n\t * @default 'btn btn-default'\n\t */\n\tbuttonClass: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'btn btn-default'\n\t},\n\n\t/**\n\t * The name of the hidden input field\n\t * @type {string}\n\t */\n\thiddenInputName: {\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * A list representing the select dropdown items.\n\t * @type {!Array<string>}\n\t * @default []\n\t */\n\titems: {\n\t\tsetter: 'setItems_',\n\t\tvalidator: val => val instanceof Array,\n\t\tvalueFn: function() {\n\t\t\treturn [];\n\t\t}\n\t},\n\n\t/**\n\t * The label that should be used for the select menu when no item is\n\t * selected. If not set, the first item will be selected automatically.\n\t * @type {string}\n\t */\n\tlabel: {\n\t\tsetter: (label) => Soy.toIncDom(label),\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * The index of the currently selected item, or -1 if none is selected.\n\t * @type {number}\n\t */\n\tselectedIndex: {\n\t\tvalidator: core.isNumber,\n\t\tvalueFn: function() {\n\t\t\treturn this.label || !this.items.length ? -1 : 0;\n\t\t}\n\t},\n\n\t/**\n\t * A list representing the select dropdown values.\n\t * @type {Array<string>=}\n\t */\n\tvalues: {\n\t\tvalidator: val => val instanceof Array\n\t}\n};\n\n/**\n * Default element classes.\n * @type {string}\n * @static\n */\nSelect.ELEMENT_CLASSES = 'select';\n\nexport default Select;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('select', Select);"],"sourceRoot":"/source/"}