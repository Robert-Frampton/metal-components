{"version":3,"sources":["Toggler.js"],"names":["Toggler","opt_config","headerEventHandler_","on","syncHeader","removeAllListeners","header","isElement","content","next","querySelector","container","event","toggle","delegateTarget","currentTarget","keyCode","preventDefault","isString","add","delegate","handleClick_","bind","handleKeydown_","getContentElement_","toggleClasses","CSS_EXPANDED","CSS_COLLAPSED","hasClass","addClasses","CSS_HEADER_EXPANDED","removeClasses","CSS_HEADER_COLLAPSED","STATE","setter","toElement","validator","value","document","register"],"mappings":"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","file":"node_modules/metal-toggler/src/Toggler.js","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport { EventHandler } from 'metal-events';\nimport State from 'metal-state';\n\n/**\n * Toggler component.\n */\nclass Toggler extends State {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\tthis.headerEventHandler_ = new EventHandler();\n\n\t\tthis.on('headerChanged', this.syncHeader);\n\t\tthis.syncHeader();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tthis.headerEventHandler_.removeAllListeners();\n\t}\n\n\t/**\n\t * Gets the content to be toggled by the given header element.\n\t * @param {!Element} header\n\t * @protected\n\t */\n\tgetContentElement_(header) {\n\t\tif (core.isElement(this.content)) {\n\t\t\treturn this.content;\n\t\t}\n\n\t\tvar content = dom.next(header, this.content);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\tcontent = header.querySelector(this.content);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\treturn this.container.querySelector(this.content);\n\t}\n\n\t/**\n\t * Handles a `click` event on the header.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleClick_(event) {\n\t\tthis.toggle(event.delegateTarget || event.currentTarget);\n\t}\n\n\t/**\n\t * Handles a `keydown` event on the header.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleKeydown_(event) {\n\t\tif (event.keyCode === 13 || event.keyCode === 32) {\n\t\t\tthis.toggle(event.delegateTarget || event.currentTarget);\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Syncs the component according to the value of the `header` state,\n\t * attaching events to the new element and detaching from any previous one.\n\t */\n\tsyncHeader() {\n\t\tthis.headerEventHandler_.removeAllListeners();\n\t\tif (this.header) {\n\t\t\tif (core.isString(this.header)) {\n\t\t\t\tthis.headerEventHandler_.add(\n\t\t\t\t\tdom.delegate(this.container, 'click', this.header, this.handleClick_.bind(this)),\n\t\t\t\t\tdom.delegate(this.container, 'keydown', this.header, this.handleKeydown_.bind(this))\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.headerEventHandler_.add(\n\t\t\t\t\tdom.on(this.header, 'click', this.handleClick_.bind(this)),\n\t\t\t\t\tdom.on(this.header, 'keydown', this.handleKeydown_.bind(this))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the content's visibility.\n\t */\n\ttoggle(header) {\n\t\tvar content = this.getContentElement_(header);\n\t\tdom.toggleClasses(content, Toggler.CSS_EXPANDED);\n\t\tdom.toggleClasses(content, Toggler.CSS_COLLAPSED);\n\n\t\tif (dom.hasClass(content, Toggler.CSS_EXPANDED)) {\n\t\t\tdom.addClasses(header, Toggler.CSS_HEADER_EXPANDED);\n\t\t\tdom.removeClasses(header, Toggler.CSS_HEADER_COLLAPSED);\n\t\t} else {\n\t\t\tdom.removeClasses(header, Toggler.CSS_HEADER_EXPANDED);\n\t\t\tdom.addClasses(header, Toggler.CSS_HEADER_COLLAPSED);\n\t\t}\n\t}\n}\n\n/**\n * State configuration.\n */\nToggler.STATE = {\n\t/**\n\t * The element where the header/content selectors will be looked for.\n\t * @type {string|!Element}\n\t */\n\tcontainer: {\n\t\tsetter: dom.toElement,\n\t\tvalidator: value => core.isString(value) || core.isElement(value),\n\t\tvalue: document\n\t},\n\n\t/**\n\t * The element that should be expanded/collapsed by this toggler.\n\t * @type {string|!Element}\n\t */\n\tcontent: {\n\t\tvalidator: value => core.isString(value) || core.isElement(value)\n\t},\n\n\t/**\n\t * The element that should be trigger toggling.\n\t * @type {string|!Element}\n\t */\n\theader: {\n\t\tvalidator: value => core.isString(value) || core.isElement(value)\n\t}\n};\n\n/**\n * The CSS class added to the content when it's collapsed.\n */\nToggler.CSS_COLLAPSED = 'toggler-collapsed';\n\n/**\n * The CSS class added to the content when it's expanded.\n */\nToggler.CSS_EXPANDED = 'toggler-expanded';\n\n/**\n * The CSS class added to the header when the content is collapsed.\n */\nToggler.CSS_HEADER_COLLAPSED = 'toggler-header-collapsed';\n\n/**\n * The CSS class added to the header when the content is expanded.\n */\nToggler.CSS_HEADER_EXPANDED = 'toggler-header-expanded';\n\nexport default Toggler;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('toggler', Toggler);"],"sourceRoot":"/source/"}