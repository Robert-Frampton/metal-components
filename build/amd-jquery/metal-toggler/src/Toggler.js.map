{"version":3,"sources":["Toggler.js"],"names":["Toggler","opt_config","headerEventHandler_","on","syncHeader","disposeInternal","removeAllListeners","getContentElement_","header","isElement","content","next","querySelector","container","handleClick_","event","toggle","delegateTarget","currentTarget","handleKeydown_","keyCode","preventDefault","isString","add","delegate","bind","toggleClasses","CSS_EXPANDED","CSS_COLLAPSED","hasClass","addClasses","CSS_HEADER_EXPANDED","removeClasses","CSS_HEADER_COLLAPSED","STATE","setter","toElement","validator","value","document","register"],"mappings":"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","file":"node_modules/metal-toggler/src/Toggler.js","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport { EventHandler } from 'metal-events';\nimport State from 'metal-state';\n\n/**\n * Toggler component.\n */\nclass Toggler extends State {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\tthis.headerEventHandler_ = new EventHandler();\n\n\t\tthis.on('headerChanged', this.syncHeader);\n\t\tthis.syncHeader();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tthis.headerEventHandler_.removeAllListeners();\n\t}\n\n\t/**\n\t * Gets the content to be toggled by the given header element.\n\t * @param {!Element} header\n\t * @protected\n\t */\n\tgetContentElement_(header) {\n\t\tif (core.isElement(this.content)) {\n\t\t\treturn this.content;\n\t\t}\n\n\t\tvar content = dom.next(header, this.content);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\tcontent = header.querySelector(this.content);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\treturn this.container.querySelector(this.content);\n\t}\n\n\t/**\n\t * Handles a `click` event on the header.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleClick_(event) {\n\t\tthis.toggle(event.delegateTarget || event.currentTarget);\n\t}\n\n\t/**\n\t * Handles a `keydown` event on the header.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleKeydown_(event) {\n\t\tif (event.keyCode === 13 || event.keyCode === 32) {\n\t\t\tthis.toggle(event.delegateTarget || event.currentTarget);\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Syncs the component according to the value of the `header` state,\n\t * attaching events to the new element and detaching from any previous one.\n\t */\n\tsyncHeader() {\n\t\tthis.headerEventHandler_.removeAllListeners();\n\t\tif (this.header) {\n\t\t\tif (core.isString(this.header)) {\n\t\t\t\tthis.headerEventHandler_.add(\n\t\t\t\t\tdom.delegate(this.container, 'click', this.header, this.handleClick_.bind(this)),\n\t\t\t\t\tdom.delegate(this.container, 'keydown', this.header, this.handleKeydown_.bind(this))\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.headerEventHandler_.add(\n\t\t\t\t\tdom.on(this.header, 'click', this.handleClick_.bind(this)),\n\t\t\t\t\tdom.on(this.header, 'keydown', this.handleKeydown_.bind(this))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the content's visibility.\n\t */\n\ttoggle(header) {\n\t\tvar content = this.getContentElement_(header);\n\t\tdom.toggleClasses(content, Toggler.CSS_EXPANDED);\n\t\tdom.toggleClasses(content, Toggler.CSS_COLLAPSED);\n\n\t\tif (dom.hasClass(content, Toggler.CSS_EXPANDED)) {\n\t\t\tdom.addClasses(header, Toggler.CSS_HEADER_EXPANDED);\n\t\t\tdom.removeClasses(header, Toggler.CSS_HEADER_COLLAPSED);\n\t\t} else {\n\t\t\tdom.removeClasses(header, Toggler.CSS_HEADER_EXPANDED);\n\t\t\tdom.addClasses(header, Toggler.CSS_HEADER_COLLAPSED);\n\t\t}\n\t}\n}\n\n/**\n * State configuration.\n */\nToggler.STATE = {\n\t/**\n\t * The element where the header/content selectors will be looked for.\n\t * @type {string|!Element}\n\t */\n\tcontainer: {\n\t\tsetter: dom.toElement,\n\t\tvalidator: value => core.isString(value) || core.isElement(value),\n\t\tvalue: document\n\t},\n\n\t/**\n\t * The element that should be expanded/collapsed by this toggler.\n\t * @type {string|!Element}\n\t */\n\tcontent: {\n\t\tvalidator: value => core.isString(value) || core.isElement(value)\n\t},\n\n\t/**\n\t * The element that should be trigger toggling.\n\t * @type {string|!Element}\n\t */\n\theader: {\n\t\tvalidator: value => core.isString(value) || core.isElement(value)\n\t}\n};\n\n/**\n * The CSS class added to the content when it's collapsed.\n */\nToggler.CSS_COLLAPSED = 'toggler-collapsed';\n\n/**\n * The CSS class added to the content when it's expanded.\n */\nToggler.CSS_EXPANDED = 'toggler-expanded';\n\n/**\n * The CSS class added to the header when the content is collapsed.\n */\nToggler.CSS_HEADER_COLLAPSED = 'toggler-header-collapsed';\n\n/**\n * The CSS class added to the header when the content is expanded.\n */\nToggler.CSS_HEADER_EXPANDED = 'toggler-header-expanded';\n\nexport default Toggler;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('toggler', Toggler);"],"sourceRoot":"/source/"}