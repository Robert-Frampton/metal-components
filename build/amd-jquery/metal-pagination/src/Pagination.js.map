{"version":3,"sources":["Pagination.js"],"names":["Pagination","created","lastState_","page","on","Events","CHANGE_REQUEST","defaultChangeRequestFn_","event","setState_","state","dispatchRequest_","emit","lastState","offset","total","getOffsetPageNumber","getOffsetTotalPages","next","circular","Math","min","onClickItem","item","delegateTarget","preventDefault","index","parseInt","getAttribute","onClickControls","control","prev","max","register","STATE","validator","isBoolean","value","isNumber","showControls","strings","isObject","setter","mixin","nextAriaLabel","prevAriaLabel","val","valueFn"],"mappings":"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","file":"node_modules/metal-pagination/src/Pagination.js","sourcesContent":["'use strict';\n\nimport { core, object } from 'metal';\nimport templates from './Pagination.soy.js';\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\n\n/**\n * UI Component that navigate through paged data.\n */\nclass Pagination extends Component {\n\t/**\n\t * @inheritDoc\n\t */\n\tcreated() {\n\t\t/**\n\t\t * Contains the previous page value\n\t\t * @type {Object}\n\t\t * @default {page: this.page}\n\t\t */\n\t\tthis.lastState_ = {\n\t\t\tpage: this.page\n\t\t};\n\n\t\tthis.on(Pagination.Events.CHANGE_REQUEST, this.defaultChangeRequestFn_, true);\n\t}\n\n\t/**\n\t * Default `changeRequest` function, sets new state of pagination.\n\t * @param {EventFacade} event\n\t * @protected\n\t */\n\tdefaultChangeRequestFn_(event) {\n\t\tthis.setState_(event.state);\n\t}\n\n\t/**\n\t * Fires `changeRequest` event.\n\t * @param {Object} state\n\t * @protected\n\t */\n\tdispatchRequest_(state) {\n\t\tthis.emit(\n\t\t\tPagination.Events.CHANGE_REQUEST,\n\t\t\t{\n\t\t\t\tlastState: this.lastState_,\n\t\t\t\toffset: this.offset,\n\t\t\t\tstate: state,\n\t\t\t\ttotal: this.total\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Retrieve page number including offset e.g., if offset is 100 and\n\t * active page is 5, this method returns 105.\n\t * @return {number} current page number plus offset\n\t */\n\tgetOffsetPageNumber() {\n\t\treturn this.offset + this.page;\n\t}\n\n\t/**\n\t * Retrieve total number of pages including offset e.g., if offset is\n\t * 100 and total 10, this method returns 110.\n\t * @return {number} total page number plus offset\n\t */\n\tgetOffsetTotalPages() {\n\t\treturn this.offset + this.total;\n\t}\n\n\t/**\n\t* Navigate to the next page.\n\t*/\n\tnext() {\n\t\tvar page = this.page,\n\t\t\ttotal = this.total;\n\n\t\tthis.dispatchRequest_({\n\t\t\tpage: (this.circular && (page === total - 1)) ? 0 : Math.min(total, ++page)\n\t\t});\n\t}\n\n\t/**\n\t * `onClick` handler for pagination items.\n\t * @param {EventFacade} event\n\t */\n\tonClickItem(event) {\n\t\tvar item = event.delegateTarget;\n\n\t\tevent.preventDefault();\n\n\t\tvar index = parseInt(item.getAttribute('data-index'));\n\n\t\tthis.dispatchRequest_({\n\t\t\tpage: index\n\t\t});\n\t}\n\n\t/**\n\t * `onClick` handler for pagination items.\n\t * @param {EventFacade} event\n\t */\n\tonClickControls(event) {\n\t\tvar control = event.delegateTarget;\n\n\t\tevent.preventDefault();\n\n\t\tvar index = parseInt(control.getAttribute('data-control-index'));\n\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tthis.prev();\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.next();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Navigate to the previous page.\n\t */\n\tprev() {\n\t\tvar page = this.page,\n\t\t\ttotal = this.total;\n\n\t\tthis.dispatchRequest_({\n\t\t\tpage: (this.circular && (page === 0)) ? total - 1 : Math.max(0, --page)\n\t\t});\n\t}\n\n\t/**\n\t * Set the new pagination state. The state is a payload object\n\t * containing the page number, e.g. `{page:1}`.\n\t * @param {Object} state\n\t * @return {Object}\n\t * @protected\n\t */\n\tsetState_(state) {\n\t\tthis.page = state.page;\n\n\t\tthis.lastState_ = state;\n\t}\n}\nSoy.register(Pagination, templates);\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nPagination.STATE = {\n\t/**\n\t * When enabled this property allows the navigation to go back to\n\t * the beggining when it reaches the last page, the opposite behavior\n\t * is also true. Incremental page navigation could happen clicking the\n\t * control arrows or invoking <code>.next()</code> and\n\t * <code>.prev()</code> methods.\n\t * @type {boolean}\n\t * @default true\n\t */\n\tcircular: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: true\n\t},\n\n\t/**\n\t * Initial page offset.\n\t * @type {number}\n\t * @default 1\n\t */\n\toffset: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 1\n\t},\n\n\t/**\n\t * Page to display on initial paint.\n\t * @type {number}\n\t * @default 0\n\t */\n\tpage: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 0\n\t},\n\n\t/**\n\t * Determines if pagination controls (Next and Prev) are rendered.\n\t * @type {boolean}\n\t * @default true\n\t */\n\tshowControls: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: true\n\t},\n\n\t/**\n\t * Collection of strings used to label elements of the UI.\n\t * @type {Object}\n\t * @default {next: 'Next', prev: 'Prev'}\n\t */\n\tstrings: {\n\t\tvalidator: core.isObject,\n\t\tsetter: val => {\n\t\t\treturn object.mixin(\n\t\t\t\t{\n\t\t\t\t\tnext: 'Next',\n\t\t\t\t\tnextAriaLabel: 'Next',\n\t\t\t\t\tprev: 'Prev',\n\t\t\t\t\tprevAriaLabel: 'Previous'\n\t\t\t\t},\n\t\t\t\tval\n\t\t\t);\n\t\t},\n\t\tvalueFn: () => {}\n\t},\n\n\t/**\n\t * Total number of page links available. If set, the new\n\t * <a href=\"Pagination.html#config_items\">items</a> node list will\n\t * be rendered.\n\t * @type {number}\n\t * @default 0\n\t */\n\ttotal: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 0\n\t}\n};\n\nPagination.Events = {\n\tCHANGE_REQUEST: 'changeRequest'\n};\n\nexport default Pagination;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('pagination', Pagination);"],"sourceRoot":"/source/"}