{"version":3,"sources":["Autocomplete.js"],"names":["Autocomplete","attached","eventHandler_","add","on","inputElement","handleInputFocus_","bind","document","handleDocClick_","window","handleWindowResize_","visible","align","element","style","width","offsetWidth","position","Bottom","removeClasses","positionCss_","Top","TopLeft","TopRight","BottomLeft","BottomRight","addClasses","getList","components","list","handleClick_","event","stopPropagation","activeElement","request","value","query","autocompleteClosing_","self","then","data","forEach","assertItemObjectStructure_","items","length","onListItemSelected_","item","selectedIndex","parseInt","getAttribute","emit","syncVisible","isObject","CancellationError","hasOwnProperty","register","STATE","format","isString","textPrimary","text"],"mappings":"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","file":"node_modules/metal-autocomplete/src/Autocomplete.js","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport debounce from 'metal-debounce';\nimport dom from 'metal-dom';\nimport { CancellablePromise as Promise } from 'metal-promise';\nimport { Align } from 'metal-position';\nimport AutocompleteBase from './AutocompleteBase';\nimport Soy from 'metal-soy';\n\nimport 'metal-list';\nimport templates from './Autocomplete.soy.js';\n\n/*\n * Autocomplete component.\n */\nclass Autocomplete extends AutocompleteBase {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tsuper.attached();\n\t\tthis.eventHandler_.add(dom.on(this.inputElement, 'focus', this.handleInputFocus_.bind(this)));\n\t\tthis.eventHandler_.add(dom.on(document, 'click', this.handleDocClick_.bind(this)));\n\t\tthis.eventHandler_.add(dom.on(window, 'resize', debounce(this.handleWindowResize_.bind(this), 100)));\n\t\tif (this.visible) {\n\t\t\tthis.align();\n\t\t}\n\t}\n\n\t/**\n\t * Aligns main element to the input element.\n\t */\n\talign() {\n\t\tthis.element.style.width = this.inputElement.offsetWidth + 'px';\n\t\tvar position = Align.align(this.element, this.inputElement, Align.Bottom);\n\n\t\tdom.removeClasses(this.element, this.positionCss_);\n\t\tswitch (position) {\n\t\t\tcase Align.Top:\n\t\t\tcase Align.TopLeft:\n\t\t\tcase Align.TopRight:\n\t\t\t\tthis.positionCss_ = 'autocomplete-top';\n\t\t\t\tbreak;\n\t\t\tcase Align.Bottom:\n\t\t\tcase Align.BottomLeft:\n\t\t\tcase Align.BottomRight:\n\t\t\t\tthis.positionCss_ = 'autocomplete-bottom';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.positionCss_ = null;\n\n\t\t}\n\t\tdom.addClasses(this.element, this.positionCss_);\n\t}\n\n\t/**\n\t * Returns the `List` component being used to render the matched items.\n\t * @return {!List}\n\t */\n\tgetList() {\n\t\treturn this.components.list;\n\t}\n\n\t/**\n\t * Handles `click` events, stopping their propagation.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleClick_(event) {\n\t\tevent.stopPropagation();\n\t}\n\n\t/**\n\t * Handles document click in order to hide autocomplete. If input element is\n\t * focused autocomplete will not hide.\n\t * @param {!Event} event\n\t */\n\thandleDocClick_() {\n\t\tif (document.activeElement === this.inputElement) {\n\t\t\treturn;\n\t\t}\n\t\tthis.visible = false;\n\t}\n\n\t/**\n\t * Handles input focus.\n\t * @param {!Event} event\n\t */\n\thandleInputFocus_() {\n\t\tthis.request(this.inputElement.value);\n\t}\n\n\t/**\n\t * Handles window resize events. Realigns the autocomplete results list to\n\t * the input field.\n\t */\n\thandleWindowResize_() {\n\t\tif (this.visible) {\n\t\t\tthis.align();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trequest(query) {\n\t\tif (this.autocompleteClosing_) {\n\t\t\t// While closing the input element will be focused, causing another\n\t\t\t// request. This request should be ignored though, since we wish to close\n\t\t\t// the dropdown list, not open it again.\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = this;\n\t\treturn super.request(query).then(function(data) {\n\t\t\tif (data) {\n\t\t\t\tdata.forEach(self.assertItemObjectStructure_);\n\t\t\t\tself.getList().items = data;\n\t\t\t}\n\t\t\tself.visible = !!(data && data.length > 0);\n\t\t});\n\t}\n\n\t/**\n\t * Emits a `select` event with the information about the selected item and\n\t * hides the element.\n\t * @param {!Element} item The list selected item.\n\t * @protected\n\t */\n\tonListItemSelected_(item) {\n\t\tvar selectedIndex = parseInt(item.getAttribute('data-index'), 10);\n\t\tthis.autocompleteClosing_ = true;\n\t\tthis.emit('select', this.getList().items[selectedIndex]);\n\t\tthis.visible = false;\n\t\tthis.autocompleteClosing_ = false;\n\t}\n\n\t/**\n\t * Synchronization logic for `visible` state.\n\t * @param {boolean} visible\n\t */\n\tsyncVisible(visible) {\n\t\tsuper.syncVisible(visible);\n\n\t\tif (visible) {\n\t\t\tthis.align();\n\t\t}\n\t}\n\n\t/**\n\t * Asserts that formatted data is valid. Throws error if item is not in the\n\t * valid syntax.\n\t * @param {*} item\n\t * @protected\n\t */\n\tassertItemObjectStructure_(item) {\n\t\tif (!core.isObject(item)) {\n\t\t\tthrow new Promise.CancellationError('Autocomplete item must be an object');\n\t\t}\n\t\tif (!item.hasOwnProperty('textPrimary')) {\n\t\t\tthrow new Promise.CancellationError('Autocomplete item must be an object with \\'textPrimary\\' key');\n\t\t}\n\t}\n}\nSoy.register(Autocomplete, templates);\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nAutocomplete.STATE = {\n\t/**\n\t * Function that converts a given item to the format that should be used by\n\t * the autocomplete.\n\t * @type {!function()}\n\t */\n\tformat: {\n\t\tvalue: function(item) {\n\t\t\tif (core.isString(item)) {\n\t\t\t\titem = {\n\t\t\t\t\ttextPrimary: item\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (core.isObject(item) && !item.text) {\n\t\t\t\titem.text = item.textPrimary;\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\t}\n};\n\nexport default Autocomplete;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('autocomplete', Autocomplete);"],"sourceRoot":"/source/"}