define(["exports","metal/src/metal","metal-dom/src/all/dom","metal-promise/src/promise/Promise","metal-component/src/all/component","metal-events/src/events","metal-jquery-adapter/src/JQueryAdapter"],function(e,t,n,r,o,i,a){"use strict";function u(e){return e&&e.__esModule?e:{"default":e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(e,"__esModule",{value:!0});var f=u(t),d=u(n),p=u(r),h=u(o),m=u(a),v=function(e){function t(n){l(this,t);var r=s(this,e.call(this,n));return r.eventHandler_=new i.EventHandler,r.on("select",r.select),r}return c(t,e),t.prototype.attached=function(){this.inputElement&&this.eventHandler_.add(d["default"].on(this.inputElement,"input",this.handleUserInput_.bind(this)))},t.prototype.detached=function(){this.eventHandler_.removeAllListeners()},t.prototype.handleUserInput_=function(){this.request(this.inputElement.value)},t.prototype.request=function(e){var t=this;this.pendingRequest&&this.pendingRequest.cancel("Cancelled by another request");var n=t.data(e);return f["default"].isPromise(n)||(n=p["default"].resolve(n)),this.pendingRequest=n.then(function(e){return Array.isArray(e)?e.map(t.format.bind(t)).filter(function(e){return f["default"].isDefAndNotNull(e)}):void 0}),this.pendingRequest},t.prototype.setData_=function(e){return f["default"].isFunction(e)?e:function(){return e}},t}(h["default"]);v.STATE={data:{setter:"setData_"},format:{value:f["default"].identityFunction,validator:f["default"].isFunction},inputElement:{setter:d["default"].toElement},select:{value:function(e){this.inputElement.value=e.text,this.inputElement.focus()},validator:f["default"].isFunction},visible:{validator:f["default"].isBoolean,value:!1}},e["default"]=v,m["default"].register("autocompleteBase",v)});